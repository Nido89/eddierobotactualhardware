<?xml version="1.0"?>
<doc>
    <assembly>
        <name>User.ObstacleAvoidanceDrive.Y2011.M08.Proxy</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState">
            <summary>
                       Service state
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ObstacleAvoidanceDriveState to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.Clone">
             <summary>
            Clones ObstacleAvoidanceDriveState
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ObstacleAvoidanceDriveState to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ObstacleAvoidanceDriveState
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ObstacleAvoidanceDriveState</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.RobotWidth">
            <summary>
                       Gets or sets robot width in meters
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.MaxPowerPerWheel">
            <summary>
                       Gets or sets max power allowed per wheel
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.MinRotationSpeed">
            <summary>
                       Gets or sets the minimum rotation speed
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.DepthCameraPosition">
            <summary>
                       Gets or sets the depth camera position relative to the floor plane 
                       and the projection of the center of mass of the robot to the floor plane
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.Controller">
            <summary>
                       Gets or sets the obstacle avoidance controller state
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveState.MaxDeltaPower">
            <summary>
                       Gets or sets the maximum allowed change in Power from one call to SetPower to the next
                       Smaller numbers will cause smoother accelrations, but can also increase chance of collision with 
                       obstacles
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController">
            <summary>
                       Simple PID controller state and behavior
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current PIDController to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Clone">
             <summary>
            Clones PIDController
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current PIDController to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes PIDController
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized PIDController</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Ki">
            <summary>
                       Integral constant
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Kp">
            <summary>
                        Proportional constant
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.PIDController.Kd">
            <summary>
                        Derivative constant
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners">
            <summary>
                       Partner names
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.Drive">
            <summary>
                       Drive service
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.DepthCamSensor">
            <summary>
                       Depth cam service
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.InfraredSensorArray">
            <summary>
                       IR sensor array
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.SonarSensorArray">
            <summary>
                       Sonar analog sensors
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.PartnerEnumerationTimeoutInSeconds">
            <summary>
                       Time we are willing to wait for each partner to start
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current Partners to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.Clone">
             <summary>
            Clones Partners
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current Partners to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Partners.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes Partners
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized Partners</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Get">
            <summary>
                       Get operation
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.ObstacleAvoidanceDriveOperationsPort">
            <summary>
                       Operations port
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Contract">
            <summary>
                       Obstacle Avoidance Drive Service
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.ObstacleAvoidanceDrive.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
    </members>
</doc>
