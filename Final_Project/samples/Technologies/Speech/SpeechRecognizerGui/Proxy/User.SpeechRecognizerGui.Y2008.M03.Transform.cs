//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.SpeechRecognizerGui.Y2008.M03, Version=0.0.0.0, Culture=neutral, PublicKeyTo" +
    "ken=7f9074033fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerGuiState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerGuiState_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerGuiState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerGuiState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerGuiState_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerGuiState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryRequestType), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryRequestType));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryRequestType), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryRequestType));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryResponse_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryResponse_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerStateQueryRequestType), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerStateQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerStateQueryRequestType));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerStateQueryRequestType), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerStateQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerStateQueryRequestType));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.HttpPostSuccess), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_HttpPostSuccess_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_HttpPostSuccess));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.HttpPostSuccess), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_HttpPostSuccess_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_HttpPostSuccess));
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerGuiState_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerGuiState(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerGuiState target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerGuiState();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerGuiState from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerGuiState)(transformFrom));
            if ((from.SpeechRecognizerState != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizerState tmp = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizerState();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SpeechRecognizerState)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.SpeechRecognizerState = tmp;
            }
            else {
                target.SpeechRecognizerState = null;
            }
            if ((from.SpeechEvents != null)) {
                int count = from.SpeechEvents.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry tmp1 = default(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry);
                    if ((from.SpeechEvents[index] != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry)(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry(from.SpeechEvents[index])));
                    }
                    else {
                        tmp1 = null;
                    }
                    tmp0.Add(tmp1);
                }
                target.SpeechEvents = tmp0;
            }
            else {
                target.SpeechEvents = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerGuiState_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerGuiState(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerGuiState target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerGuiState();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerGuiState from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerGuiState)(transformFrom));
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizerState tmp = from.SpeechRecognizerState;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizerState tmp0 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizerState();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.SpeechRecognizerState = tmp0;
            }
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry> tmp1 = from.SpeechEvents;
            if ((tmp1 != null)) {
                int count = tmp1.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry> tmp2 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry tmp3 = default(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry);
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry tmp4 = tmp1[index];
                    if ((tmp4 != null)) {
                        tmp3 = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry)(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry(tmp4)));
                    }
                    tmp2.Add(tmp3);
                }
                target.SpeechEvents = tmp2;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry)(transformFrom));
            target.Timestamp = from.Timestamp;
            if ((from.SpeechDetected != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechDetectedNotification tmp = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechDetectedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SpeechDetected)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.SpeechDetected = tmp;
            }
            else {
                target.SpeechDetected = null;
            }
            if ((from.SpeechRecognized != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizedNotification tmp0 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SpeechRecognized)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.SpeechRecognized = tmp0;
            }
            else {
                target.SpeechRecognized = null;
            }
            if ((from.RecognitionRejected != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognitionRejectedNotification tmp1 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognitionRejectedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(from.RecognitionRejected)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp1)));
                target.RecognitionRejected = tmp1;
            }
            else {
                target.RecognitionRejected = null;
            }
            if ((from.SpeechInformation != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechInformation tmp2 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechInformation();
                ((Microsoft.Dss.Core.IDssSerializable)(from.SpeechInformation)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.SpeechInformation = tmp2;
            }
            else {
                target.SpeechInformation = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry)(transformFrom));
            target.Timestamp = from.Timestamp;
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechDetectedNotification tmp = from.SpeechDetected;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechDetectedNotification tmp0 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechDetectedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.SpeechDetected = tmp0;
            }
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizedNotification tmp1 = from.SpeechRecognized;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizedNotification tmp2 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognizedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.SpeechRecognized = tmp2;
            }
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognitionRejectedNotification tmp3 = from.RecognitionRejected;
            if ((tmp3 != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognitionRejectedNotification tmp4 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechRecognitionRejectedNotification();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp3)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp4)));
                target.RecognitionRejected = tmp4;
            }
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechInformation tmp5 = from.SpeechInformation;
            if ((tmp5 != null)) {
                global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechInformation tmp6 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizer.Proxy.SpeechInformation();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp5)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp6)));
                target.SpeechInformation = tmp6;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryRequestType(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryRequestType target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryRequestType();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryRequestType from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryRequestType)(transformFrom));
            target.NewerThanTimestamp = from.NewerThanTimestamp;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryRequestType(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryRequestType target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryRequestType();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryRequestType from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryRequestType)(transformFrom));
            target.NewerThanTimestamp = from.NewerThanTimestamp;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryResponse_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryResponse(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryResponse target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryResponse();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryResponse from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryResponse)(transformFrom));
            if ((from.Events != null)) {
                int count = from.Events.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry tmp0 = default(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry);
                    if ((from.Events[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry)(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry(from.Events[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.Events = tmp;
            }
            else {
                target.Events = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventsQueryResponse_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventsQueryResponse(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryResponse target = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventsQueryResponse();
            global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryResponse from = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventsQueryResponse)(transformFrom));
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry> tmp = from.Events;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry tmp1 = default(global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry);
                    global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.EventListEntry tmp2 = tmp[index];
                    if ((tmp2 != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.EventListEntry)(Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_EventListEntry_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_EventListEntry(tmp2)));
                    }
                    tmp0.Add(tmp1);
                }
                target.Events = tmp0;
            }
            return target;
        }
        
        private static global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerStateQueryRequestType _cachedInstance0 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.SpeechRecognizerStateQueryRequestType();
        
        private static global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerStateQueryRequestType _cachedInstance = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.SpeechRecognizerStateQueryRequestType();
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerStateQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerStateQueryRequestType(object transformFrom) {
            return _cachedInstance;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_SpeechRecognizerStateQueryRequestType_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_SpeechRecognizerStateQueryRequestType(object transformFrom) {
            return _cachedInstance0;
        }
        
        private static global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.HttpPostSuccess _cachedInstance2 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.Proxy.HttpPostSuccess();
        
        private static global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.HttpPostSuccess _cachedInstance1 = new global::Microsoft.Robotics.Technologies.Speech.SpeechRecognizerGui.HttpPostSuccess();
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_HttpPostSuccess_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_HttpPostSuccess(object transformFrom) {
            return _cachedInstance1;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_HttpPostSuccess_TO_Microsoft_Robotics_Technologies_Speech_SpeechRecognizerGui_Proxy_HttpPostSuccess(object transformFrom) {
            return _cachedInstance2;
        }
    }
}
