//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.TextToSpeech.Y2006.M05, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7f9" +
    "074033fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.TextToSpeechState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_TextToSpeechState_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_TextToSpeechState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.TextToSpeechState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_TextToSpeechState_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_TextToSpeechState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextSynchRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextSynchRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextSynchRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextSynchRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextSynchRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextSynchRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetRateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetRateRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetRateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetRateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetRateRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetRateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVolumeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVolumeRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVolumeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVolumeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVolumeRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVolumeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVoiceRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVoiceRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVoiceRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVoiceRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVoiceRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVoiceRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.VisemeNotification), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_VisemeNotification_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_VisemeNotification));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.VisemeNotification), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Technologies_Speech_TextToSpeech_VisemeNotification_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_VisemeNotification));
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_TextToSpeechState_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_TextToSpeechState(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.TextToSpeechState target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.TextToSpeechState();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.TextToSpeechState from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.TextToSpeechState)(transformFrom));
            if ((from.Voices != null)) {
                int count = from.Voices.Count;
                global::System.Collections.Generic.List<string> tmp = new global::System.Collections.Generic.List<string>(count);
                tmp.AddRange(from.Voices);
                target.Voices = tmp;
            }
            else {
                target.Voices = null;
            }
            target.Voice = from.Voice;
            target.Volume = from.Volume;
            target.Rate = from.Rate;
            target.SpeechText = from.SpeechText;
            target.DisableAudioOutput = from.DisableAudioOutput;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_TextToSpeechState_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_TextToSpeechState(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.TextToSpeechState target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.TextToSpeechState();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.TextToSpeechState from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.TextToSpeechState)(transformFrom));
            global::System.Collections.Generic.List<string> tmp = from.Voices;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<string> tmp0 = new global::System.Collections.Generic.List<string>(count);
                tmp0.AddRange(tmp);
                target.Voices = tmp0;
            }
            target.Voice = from.Voice;
            target.Volume = from.Volume;
            target.Rate = from.Rate;
            target.SpeechText = from.SpeechText;
            target.DisableAudioOutput = from.DisableAudioOutput;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextRequest)(transformFrom));
            target.SpeechText = from.SpeechText;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextRequest)(transformFrom));
            target.SpeechText = from.SpeechText;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextSynchRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextSynchRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextSynchRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextSynchRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextSynchRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextSynchRequest)(transformFrom));
            target.SpeechText = from.SpeechText;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_SayTextSynchRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SayTextSynchRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextSynchRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SayTextSynchRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextSynchRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SayTextSynchRequest)(transformFrom));
            target.SpeechText = from.SpeechText;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetRateRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetRateRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetRateRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetRateRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetRateRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetRateRequest)(transformFrom));
            target.Rate = from.Rate;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetRateRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetRateRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetRateRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetRateRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetRateRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetRateRequest)(transformFrom));
            target.Rate = from.Rate;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVolumeRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVolumeRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVolumeRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVolumeRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVolumeRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVolumeRequest)(transformFrom));
            target.Volume = from.Volume;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVolumeRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVolumeRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVolumeRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVolumeRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVolumeRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVolumeRequest)(transformFrom));
            target.Volume = from.Volume;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVoiceRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVoiceRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVoiceRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVoiceRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVoiceRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVoiceRequest)(transformFrom));
            target.Voice = from.Voice;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_SetVoiceRequest_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_SetVoiceRequest(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVoiceRequest target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.SetVoiceRequest();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVoiceRequest from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.SetVoiceRequest)(transformFrom));
            target.Voice = from.Voice;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_VisemeNotification_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_VisemeNotification(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.VisemeNotification target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.VisemeNotification();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.VisemeNotification from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.VisemeNotification)(transformFrom));
            target.Viseme = from.Viseme;
            target.NextViseme = from.NextViseme;
            target.AudioPositionInTicks = from.AudioPositionInTicks;
            target.DurationInTicks = from.DurationInTicks;
            target.Emphasis = from.Emphasis;
            return target;
        }
        
        public static object Microsoft_Robotics_Technologies_Speech_TextToSpeech_VisemeNotification_TO_Microsoft_Robotics_Technologies_Speech_TextToSpeech_Proxy_VisemeNotification(object transformFrom) {
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.VisemeNotification target = new global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.Proxy.VisemeNotification();
            global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.VisemeNotification from = ((global::Microsoft.Robotics.Technologies.Speech.TextToSpeech.VisemeNotification)(transformFrom));
            target.Viseme = from.Viseme;
            target.NextViseme = from.NextViseme;
            target.AudioPositionInTicks = from.AudioPositionInTicks;
            target.DurationInTicks = from.DurationInTicks;
            target.Emphasis = from.Emphasis;
            return target;
        }
    }
}
