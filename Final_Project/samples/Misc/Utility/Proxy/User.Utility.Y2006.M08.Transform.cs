//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.Utility.Y2006.M08, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7f907403" +
    "3fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteArray), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteArray_TO_Microsoft_Robotics_Services_Sample_ByteArray_ByteArray));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.ByteArray.ByteArray), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_ByteArray_ByteArray_TO_Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteArray));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteList_TO_Microsoft_Robotics_Services_Sample_ByteArray_ByteList));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.ByteArray.ByteList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_ByteArray_ByteList_TO_Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteList));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.DateTimeState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_DateTimeState_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_DateTimeState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DateTimeState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_DateTimeState_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_DateTimeState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromTimeSpanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromTimeSpanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractDateTimeFromDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractDateTimeFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractDateTimeFromDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractDateTimeFromDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractDateTimeFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractDateTimeFromDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.AlertRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_Proxy_AlertRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_AlertRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.AlertRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_AlertRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_AlertRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_PromptRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.PromptRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_PromptRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_PromptResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.PromptResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_PromptResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_ConfirmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_ConfirmRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_ConfirmResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Dialog_ConfirmResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexDialogState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexDialogState_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexDialogState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexDialogState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_FlexDialogState_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexDialogState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HttpNotification), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HttpNotification_TO_Microsoft_Robotics_Services_Sample_FlexDialog_HttpNotification));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.FlexDialog.HttpNotification), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_FlexDialog_HttpNotification_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HttpNotification));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogInfoRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_Proxy_LogInfoRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogInfoRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.LogInfoRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_LogInfoRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogInfoRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogWarningRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_Proxy_LogWarningRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogWarningRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.LogWarningRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_LogWarningRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogWarningRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogErrorRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_Proxy_LogErrorRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogErrorRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Log.LogErrorRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Log_LogErrorRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogErrorRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.MathConstants), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_MathConstants_TO_Microsoft_Robotics_Services_Sample_Math_MathConstants));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.MathConstants), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_MathConstants_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_MathConstants));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.AcosRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_AcosRequest_TO_Microsoft_Robotics_Services_Sample_Math_AcosRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.AcosRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_AcosRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AcosRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.Response), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_Response_TO_Microsoft_Robotics_Services_Sample_Math_Response));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Response), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Response_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_Response));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.AsinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_AsinRequest_TO_Microsoft_Robotics_Services_Sample_Math_AsinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.AsinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_AsinRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AsinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.AtanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_AtanRequest_TO_Microsoft_Robotics_Services_Sample_Math_AtanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.AtanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_AtanRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AtanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.Atan2Request), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_Atan2Request_TO_Microsoft_Robotics_Services_Sample_Math_Atan2Request));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Atan2Request), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Atan2Request_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_Atan2Request));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.CosRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_CosRequest_TO_Microsoft_Robotics_Services_Sample_Math_CosRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.CosRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_CosRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_CosRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.ExpRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_ExpRequest_TO_Microsoft_Robotics_Services_Sample_Math_ExpRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.ExpRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_ExpRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ExpRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.LogRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_LogRequest_TO_Microsoft_Robotics_Services_Sample_Math_LogRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.LogRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_LogRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_LogRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.PowRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_PowRequest_TO_Microsoft_Robotics_Services_Sample_Math_PowRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.PowRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_PowRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_PowRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.RandomRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_RandomRequest_TO_Microsoft_Robotics_Services_Sample_Math_RandomRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.RandomRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_RandomRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_RandomRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.RoundRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_RoundRequest_TO_Microsoft_Robotics_Services_Sample_Math_RoundRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.RoundRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_RoundRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_RoundRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.SinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_SinRequest_TO_Microsoft_Robotics_Services_Sample_Math_SinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.SinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_SinRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_SinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.SqrtRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_SqrtRequest_TO_Microsoft_Robotics_Services_Sample_Math_SqrtRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.SqrtRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_SqrtRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_SqrtRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.TanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_TanRequest_TO_Microsoft_Robotics_Services_Sample_Math_TanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.TanRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_TanRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_TanRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.TruncateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_TruncateRequest_TO_Microsoft_Robotics_Services_Sample_Math_TruncateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.TruncateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_TruncateRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_TruncateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToRadiansRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_ToRadiansRequest_TO_Microsoft_Robotics_Services_Sample_Math_ToRadiansRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.ToRadiansRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_ToRadiansRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ToRadiansRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToDegreesRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_Proxy_ToDegreesRequest_TO_Microsoft_Robotics_Services_Sample_Math_ToDegreesRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Math.ToDegreesRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Math_ToDegreesRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ToDegreesRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.PlayRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_PlayRequest_TO_Microsoft_Robotics_Services_Sample_Sound_PlayRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.PlayRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_PlayRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_PlayRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.AsteriskRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_AsteriskRequest_TO_Microsoft_Robotics_Services_Sample_Sound_AsteriskRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.AsteriskRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_AsteriskRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_AsteriskRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.BeepRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_BeepRequest_TO_Microsoft_Robotics_Services_Sample_Sound_BeepRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.BeepRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_BeepRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_BeepRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.ExclamationRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_ExclamationRequest_TO_Microsoft_Robotics_Services_Sample_Sound_ExclamationRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.ExclamationRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_ExclamationRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_ExclamationRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.HandRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_HandRequest_TO_Microsoft_Robotics_Services_Sample_Sound_HandRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.HandRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_HandRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_HandRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.Proxy.QuestionRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_Proxy_QuestionRequest_TO_Microsoft_Robotics_Services_Sample_Sound_QuestionRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Sound.QuestionRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Sound_QuestionRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_QuestionRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ContainsRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ContainsRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ContainsResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ContainsResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_EndsWithRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_EndsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_EndsWithResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_EndsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_IndexOfRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_IndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_IndexOfResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_IndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_InsertRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.InsertRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_InsertRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_InsertResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.InsertResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_InsertResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_JoinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.JoinRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_JoinRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_JoinResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.JoinResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_JoinResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_PadRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.PadRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_PadRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_PadResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.PadResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_PadResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_RemoveRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_RemoveRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_RemoveResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_RemoveResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ReplaceRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ReplaceRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ReplaceResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ReplaceResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_SplitRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.SplitRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_SplitRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_SplitResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.SplitResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_SplitResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_StartsWithRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_StartsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_StartsWithResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_StartsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_SubStringRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_SubStringRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_SubStringResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_SubStringResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToLowerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ToLowerRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToLowerResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ToLowerResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToUpperRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ToUpperRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToUpperResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_ToUpperResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_TrimRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.TrimRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_TrimRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_TrimResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.StringHelper.TrimResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_StringHelper_TrimResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_TimerState_TO_Microsoft_Robotics_Services_Sample_Timer_TimerState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.TimerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_TimerState_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimerState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.FireTimerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_FireTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_FireTimerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.FireTimerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_FireTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_FireTimerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.SetTimerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_SetTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_SetTimerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.SetTimerRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_SetTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_SetTimerRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TickRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_TickRequest_TO_Microsoft_Robotics_Services_Sample_Timer_TickRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.TickRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_TickRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TickRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeRequest_TO_Microsoft_Robotics_Services_Sample_Timer_TimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.TimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_TimeRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeResponse_TO_Microsoft_Robotics_Services_Sample_Timer_TimeResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.Timer.TimeResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_Timer_TimeResponse_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.Sample.UrlLauncher.Proxy.LaunchUrlRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_UrlLauncher_Proxy_LaunchUrlRequest_TO_Microsoft_Robotics_Services_Sample_UrlLauncher_LaunchUrlRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.Sample.UrlLauncher.LaunchUrlRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_Sample_UrlLauncher_LaunchUrlRequest_TO_Microsoft_Robotics_Services_Sample_UrlLauncher_Proxy_LaunchUrlRequest));
        }
        
        public static object Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteArray_TO_Microsoft_Robotics_Services_Sample_ByteArray_ByteArray(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.ByteArray.ByteArray target = new global::Microsoft.Robotics.Services.Sample.ByteArray.ByteArray();
            global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteArray from = ((global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteArray)(transformFrom));
            if ((from.Data != null)) {
                int count = from.Data.Length;
                byte[] tmp = new byte[count];
                global::System.Buffer.BlockCopy(from.Data, 0, tmp, 0, global::System.Buffer.ByteLength(from.Data));
                target.Data = tmp;
            }
            else {
                target.Data = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_ByteArray_ByteArray_TO_Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteArray(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteArray target = new global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteArray();
            global::Microsoft.Robotics.Services.Sample.ByteArray.ByteArray from = ((global::Microsoft.Robotics.Services.Sample.ByteArray.ByteArray)(transformFrom));
            byte[] tmp = from.Data;
            if ((tmp != null)) {
                int count = tmp.Length;
                byte[] tmp0 = new byte[count];
                global::System.Buffer.BlockCopy(tmp, 0, tmp0, 0, global::System.Buffer.ByteLength(tmp));
                target.Data = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteList_TO_Microsoft_Robotics_Services_Sample_ByteArray_ByteList(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.ByteArray.ByteList target = new global::Microsoft.Robotics.Services.Sample.ByteArray.ByteList();
            global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteList from = ((global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteList)(transformFrom));
            if ((from.Data != null)) {
                int count = from.Data.Count;
                global::System.Collections.Generic.List<byte> tmp = new global::System.Collections.Generic.List<byte>(count);
                tmp.AddRange(from.Data);
                target.Data = tmp;
            }
            else {
                target.Data = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_ByteArray_ByteList_TO_Microsoft_Robotics_Services_Sample_ByteArray_Proxy_ByteList(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteList target = new global::Microsoft.Robotics.Services.Sample.ByteArray.Proxy.ByteList();
            global::Microsoft.Robotics.Services.Sample.ByteArray.ByteList from = ((global::Microsoft.Robotics.Services.Sample.ByteArray.ByteList)(transformFrom));
            global::System.Collections.Generic.List<byte> tmp = from.Data;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<byte> tmp0 = new global::System.Collections.Generic.List<byte>(count);
                tmp0.AddRange(tmp);
                target.Data = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_DateTimeState_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_DateTimeState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DateTimeState target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DateTimeState();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.DateTimeState from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.DateTimeState)(transformFrom));
            target.Now = from.Now;
            target.UtcNow = from.UtcNow;
            target.Today = from.Today;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_DateTimeState_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_DateTimeState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.DateTimeState target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.DateTimeState();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DateTimeState from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DateTimeState)(transformFrom));
            target.Now = from.Now;
            target.UtcNow = from.UtcNow;
            target.Today = from.Today;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateDateTimeRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            target.Hour = from.Hour;
            target.Minute = from.Minute;
            target.Second = from.Second;
            target.Millisecond = from.Millisecond;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateDateTimeRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            target.Hour = from.Hour;
            target.Minute = from.Minute;
            target.Second = from.Second;
            target.Millisecond = from.Millisecond;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateTimeSpanRequest)(transformFrom));
            target.Days = from.Days;
            target.Hours = from.Hours;
            target.Minutes = from.Minutes;
            target.Seconds = from.Seconds;
            target.Milliseconds = from.Milliseconds;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_CreateTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_CreateTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.CreateTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.CreateTimeSpanRequest)(transformFrom));
            target.Days = from.Days;
            target.Hours = from.Hours;
            target.Minutes = from.Minutes;
            target.Seconds = from.Seconds;
            target.Milliseconds = from.Milliseconds;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToDateTimeRequest)(transformFrom));
            target.DateTime = from.DateTime;
            if ((from.TimeSpan != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpan)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.TimeSpan = tmp;
            }
            else {
                target.TimeSpan = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToDateTimeRequest)(transformFrom));
            target.DateTime = from.DateTime;
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = from.TimeSpan;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpan = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToTimeSpanRequest)(transformFrom));
            if ((from.TimeSpan1 != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpan1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.TimeSpan1 = tmp;
            }
            else {
                target.TimeSpan1 = null;
            }
            if ((from.TimeSpan2 != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpan2)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpan2 = tmp0;
            }
            else {
                target.TimeSpan2 = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_AddTimeSpanToTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_AddTimeSpanToTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.AddTimeSpanToTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.AddTimeSpanToTimeSpanRequest)(transformFrom));
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = from.TimeSpan1;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpan1 = tmp0;
            }
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp1 = from.TimeSpan2;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp2 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.TimeSpan2 = tmp2;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromTimeSpanRequest)(transformFrom));
            if ((from.TimeSpanToSubtractFrom != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpanToSubtractFrom)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.TimeSpanToSubtractFrom = tmp;
            }
            else {
                target.TimeSpanToSubtractFrom = null;
            }
            if ((from.TimeSpanToSubtract != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpanToSubtract)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpanToSubtract = tmp0;
            }
            else {
                target.TimeSpanToSubtract = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromTimeSpanRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromTimeSpanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromTimeSpanRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromTimeSpanRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromTimeSpanRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromTimeSpanRequest)(transformFrom));
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = from.TimeSpanToSubtractFrom;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpanToSubtractFrom = tmp0;
            }
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp1 = from.TimeSpanToSubtract;
            if ((tmp1 != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp2 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp1)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp2)));
                target.TimeSpanToSubtract = tmp2;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromDateTimeRequest)(transformFrom));
            target.DateTime = from.DateTime;
            if ((from.TimeSpan != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(from.TimeSpan)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                target.TimeSpan = tmp;
            }
            else {
                target.TimeSpan = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractTimeSpanFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractTimeSpanFromDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractTimeSpanFromDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractTimeSpanFromDateTimeRequest)(transformFrom));
            target.DateTime = from.DateTime;
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp = from.TimeSpan;
            if ((tmp != null)) {
                global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan tmp0 = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.DssTimeSpan();
                ((Microsoft.Dss.Core.IDssSerializable)(tmp)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp0)));
                target.TimeSpan = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractDateTimeFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractDateTimeFromDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractDateTimeFromDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractDateTimeFromDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractDateTimeFromDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractDateTimeFromDateTimeRequest)(transformFrom));
            target.DateTimeToSubtractFrom = from.DateTimeToSubtractFrom;
            target.DateTimeToSubtract = from.DateTimeToSubtract;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_VplDateTimeHelper_SubtractDateTimeFromDateTimeRequest_TO_Microsoft_Robotics_Services_Sample_VplDateTimeHelper_Proxy_SubtractDateTimeFromDateTimeRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractDateTimeFromDateTimeRequest target = new global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.Proxy.SubtractDateTimeFromDateTimeRequest();
            global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractDateTimeFromDateTimeRequest from = ((global::Microsoft.Robotics.Services.Sample.VplDateTimeHelper.SubtractDateTimeFromDateTimeRequest)(transformFrom));
            target.DateTimeToSubtractFrom = from.DateTimeToSubtractFrom;
            target.DateTimeToSubtract = from.DateTimeToSubtract;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_Proxy_AlertRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_AlertRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.AlertRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.AlertRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.AlertRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.AlertRequest)(transformFrom));
            target.Message = from.Message;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_AlertRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_AlertRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.AlertRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.AlertRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.AlertRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.AlertRequest)(transformFrom));
            target.Message = from.Message;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_PromptRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.PromptRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.PromptRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptRequest)(transformFrom));
            target.Message = from.Message;
            target.DefaultValue = from.DefaultValue;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_PromptRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.PromptRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.PromptRequest)(transformFrom));
            target.Message = from.Message;
            target.DefaultValue = from.DefaultValue;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_PromptResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.PromptResponse target = new global::Microsoft.Robotics.Services.Sample.Dialog.PromptResponse();
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptResponse from = ((global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptResponse)(transformFrom));
            target.Confirmed = from.Confirmed;
            target.TextData = from.TextData;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_PromptResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_PromptResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptResponse target = new global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.PromptResponse();
            global::Microsoft.Robotics.Services.Sample.Dialog.PromptResponse from = ((global::Microsoft.Robotics.Services.Sample.Dialog.PromptResponse)(transformFrom));
            target.Confirmed = from.Confirmed;
            target.TextData = from.TextData;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_ConfirmRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmRequest)(transformFrom));
            target.Message = from.Message;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_ConfirmRequest_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmRequest target = new global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmRequest();
            global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmRequest from = ((global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmRequest)(transformFrom));
            target.Message = from.Message;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_ConfirmResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmResponse target = new global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmResponse();
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmResponse from = ((global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmResponse)(transformFrom));
            target.Confirmed = from.Confirmed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Dialog_ConfirmResponse_TO_Microsoft_Robotics_Services_Sample_Dialog_Proxy_ConfirmResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmResponse target = new global::Microsoft.Robotics.Services.Sample.Dialog.Proxy.ConfirmResponse();
            global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmResponse from = ((global::Microsoft.Robotics.Services.Sample.Dialog.ConfirmResponse)(transformFrom));
            target.Confirmed = from.Confirmed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexDialogState_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexDialogState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexDialogState target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexDialogState();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexDialogState from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexDialogState)(transformFrom));
            target.Title = from.Title;
            target.Visible = from.Visible;
            if ((from.Controls != null)) {
                int count = from.Controls.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl tmp0 = default(global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl);
                    if ((from.Controls[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl(from.Controls[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.Controls = tmp;
            }
            else {
                target.Controls = null;
            }
            if ((from.Buttons != null)) {
                int count0 = from.Buttons.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton> tmp1 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton>(count0);
                for (int index0 = 0; (index0 < count0); index0 = (index0 + 1)) {
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton tmp2 = default(global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton);
                    if ((from.Buttons[index0] != null)) {
                        tmp2 = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton(from.Buttons[index0])));
                    }
                    else {
                        tmp2 = null;
                    }
                    tmp1.Add(tmp2);
                }
                target.Buttons = tmp1;
            }
            else {
                target.Buttons = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_FlexDialogState_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexDialogState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexDialogState target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexDialogState();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexDialogState from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexDialogState)(transformFrom));
            target.Title = from.Title;
            target.Visible = from.Visible;
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl> tmp = from.Controls;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl tmp1 = default(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl);
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl tmp2 = tmp[index];
                    if ((tmp2 != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl)(Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl(tmp2)));
                    }
                    tmp0.Add(tmp1);
                }
                target.Controls = tmp0;
            }
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton> tmp3 = from.Buttons;
            if ((tmp3 != null)) {
                int count0 = tmp3.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton> tmp4 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton>(count0);
                for (int index0 = 0; (index0 < count0); index0 = (index0 + 1)) {
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton tmp5 = default(global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton);
                    global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton tmp6 = tmp3[index0];
                    if ((tmp6 != null)) {
                        tmp5 = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton)(Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton(tmp6)));
                    }
                    tmp4.Add(tmp5);
                }
                target.Buttons = tmp4;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl)(transformFrom));
            target.Id = from.Id;
            target.ControlType = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControlType)(((int)(from.ControlType))));
            target.Text = from.Text;
            target.Value = from.Value;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl)(transformFrom));
            target.Id = from.Id;
            target.ControlType = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControlType)(((int)(from.ControlType))));
            target.Text = from.Text;
            target.Value = from.Value;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton)(transformFrom));
            target.Id = from.Id;
            target.ControlType = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControlType)(((int)(from.ControlType))));
            target.Text = from.Text;
            target.Value = from.Value;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton)(transformFrom));
            target.Id = from.Id;
            target.ControlType = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControlType)(((int)(from.ControlType))));
            target.Text = from.Text;
            target.Value = from.Value;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest)(transformFrom));
            target.Id = from.Id;
            target.Pressed = from.Pressed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest)(transformFrom));
            target.Id = from.Id;
            target.Pressed = from.Pressed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest)(transformFrom));
            target.Show = from.Show;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest)(transformFrom));
            target.Show = from.Show;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest)(transformFrom));
            target.Title = from.Title;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest)(transformFrom));
            target.Title = from.Title;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage)(transformFrom));
            target.Title = from.Title;
            target.Service = from.Service;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage)(transformFrom));
            target.Title = from.Title;
            target.Service = from.Service;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HttpNotification_TO_Microsoft_Robotics_Services_Sample_FlexDialog_HttpNotification(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.HttpNotification target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.HttpNotification();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HttpNotification from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HttpNotification)(transformFrom));
            target.Operation = from.Operation;
            if ((from.Control != null)) {
                target.Control = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl(from.Control)));
            }
            else {
                target.Control = null;
            }
            if ((from.Button != null)) {
                target.Button = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton(from.Button)));
            }
            else {
                target.Button = null;
            }
            target.Title = from.Title;
            if ((from.Show != null)) {
                target.Show = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest(from.Show)));
            }
            else {
                target.Show = null;
            }
            if ((from.ButtonPress != null)) {
                target.ButtonPress = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest(from.ButtonPress)));
            }
            else {
                target.ButtonPress = null;
            }
            if ((from.SetTitle != null)) {
                target.SetTitle = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest(from.SetTitle)));
            }
            else {
                target.SetTitle = null;
            }
            if ((from.HandOff != null)) {
                target.HandOff = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage)(Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage(from.HandOff)));
            }
            else {
                target.HandOff = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_FlexDialog_HttpNotification_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HttpNotification(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HttpNotification target = new global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HttpNotification();
            global::Microsoft.Robotics.Services.Sample.FlexDialog.HttpNotification from = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.HttpNotification)(transformFrom));
            target.Operation = from.Operation;
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexControl tmp = from.Control;
            if ((tmp != null)) {
                target.Control = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexControl)(Microsoft_Robotics_Services_Sample_FlexDialog_FlexControl_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexControl(tmp)));
            }
            global::Microsoft.Robotics.Services.Sample.FlexDialog.FlexButton tmp0 = from.Button;
            if ((tmp0 != null)) {
                target.Button = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.FlexButton)(Microsoft_Robotics_Services_Sample_FlexDialog_FlexButton_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_FlexButton(tmp0)));
            }
            target.Title = from.Title;
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ShowRequest tmp1 = from.Show;
            if ((tmp1 != null)) {
                target.Show = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ShowRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_ShowRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ShowRequest(tmp1)));
            }
            global::Microsoft.Robotics.Services.Sample.FlexDialog.ButtonPressRequest tmp2 = from.ButtonPress;
            if ((tmp2 != null)) {
                target.ButtonPress = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.ButtonPressRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_ButtonPressRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_ButtonPressRequest(tmp2)));
            }
            global::Microsoft.Robotics.Services.Sample.FlexDialog.SetTitleRequest tmp3 = from.SetTitle;
            if ((tmp3 != null)) {
                target.SetTitle = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.SetTitleRequest)(Microsoft_Robotics_Services_Sample_FlexDialog_SetTitleRequest_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_SetTitleRequest(tmp3)));
            }
            global::Microsoft.Robotics.Services.Sample.FlexDialog.HandOffMessage tmp4 = from.HandOff;
            if ((tmp4 != null)) {
                target.HandOff = ((global::Microsoft.Robotics.Services.Sample.FlexDialog.Proxy.HandOffMessage)(Microsoft_Robotics_Services_Sample_FlexDialog_HandOffMessage_TO_Microsoft_Robotics_Services_Sample_FlexDialog_Proxy_HandOffMessage(tmp4)));
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_Proxy_LogInfoRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogInfoRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.LogInfoRequest target = new global::Microsoft.Robotics.Services.Sample.Log.LogInfoRequest();
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogInfoRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogInfoRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_LogInfoRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogInfoRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogInfoRequest target = new global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogInfoRequest();
            global::Microsoft.Robotics.Services.Sample.Log.LogInfoRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.LogInfoRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_Proxy_LogWarningRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogWarningRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.LogWarningRequest target = new global::Microsoft.Robotics.Services.Sample.Log.LogWarningRequest();
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogWarningRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogWarningRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_LogWarningRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogWarningRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogWarningRequest target = new global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogWarningRequest();
            global::Microsoft.Robotics.Services.Sample.Log.LogWarningRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.LogWarningRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_Proxy_LogErrorRequest_TO_Microsoft_Robotics_Services_Sample_Log_LogErrorRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.LogErrorRequest target = new global::Microsoft.Robotics.Services.Sample.Log.LogErrorRequest();
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogErrorRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogErrorRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Log_LogErrorRequest_TO_Microsoft_Robotics_Services_Sample_Log_Proxy_LogErrorRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogErrorRequest target = new global::Microsoft.Robotics.Services.Sample.Log.Proxy.LogErrorRequest();
            global::Microsoft.Robotics.Services.Sample.Log.LogErrorRequest from = ((global::Microsoft.Robotics.Services.Sample.Log.LogErrorRequest)(transformFrom));
            target.Message = from.Message;
            target.Category = from.Category;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_MathConstants_TO_Microsoft_Robotics_Services_Sample_Math_MathConstants(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.MathConstants target = new global::Microsoft.Robotics.Services.Sample.Math.MathConstants();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.MathConstants from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.MathConstants)(transformFrom));
            target.PI = from.PI;
            target.E = from.E;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_MathConstants_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_MathConstants(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.MathConstants target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.MathConstants();
            global::Microsoft.Robotics.Services.Sample.Math.MathConstants from = ((global::Microsoft.Robotics.Services.Sample.Math.MathConstants)(transformFrom));
            target.PI = from.PI;
            target.E = from.E;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_AcosRequest_TO_Microsoft_Robotics_Services_Sample_Math_AcosRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.AcosRequest target = new global::Microsoft.Robotics.Services.Sample.Math.AcosRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AcosRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.AcosRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_AcosRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AcosRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AcosRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.AcosRequest();
            global::Microsoft.Robotics.Services.Sample.Math.AcosRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.AcosRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_Response_TO_Microsoft_Robotics_Services_Sample_Math_Response(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Response target = new global::Microsoft.Robotics.Services.Sample.Math.Response();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.Response from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.Response)(transformFrom));
            target.Result = from.Result;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Response_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_Response(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.Response target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.Response();
            global::Microsoft.Robotics.Services.Sample.Math.Response from = ((global::Microsoft.Robotics.Services.Sample.Math.Response)(transformFrom));
            target.Result = from.Result;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_AsinRequest_TO_Microsoft_Robotics_Services_Sample_Math_AsinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.AsinRequest target = new global::Microsoft.Robotics.Services.Sample.Math.AsinRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AsinRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.AsinRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_AsinRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AsinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AsinRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.AsinRequest();
            global::Microsoft.Robotics.Services.Sample.Math.AsinRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.AsinRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_AtanRequest_TO_Microsoft_Robotics_Services_Sample_Math_AtanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.AtanRequest target = new global::Microsoft.Robotics.Services.Sample.Math.AtanRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AtanRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.AtanRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_AtanRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_AtanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.AtanRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.AtanRequest();
            global::Microsoft.Robotics.Services.Sample.Math.AtanRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.AtanRequest)(transformFrom));
            target.D = from.D;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_Atan2Request_TO_Microsoft_Robotics_Services_Sample_Math_Atan2Request(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Atan2Request target = new global::Microsoft.Robotics.Services.Sample.Math.Atan2Request();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.Atan2Request from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.Atan2Request)(transformFrom));
            target.Y = from.Y;
            target.X = from.X;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Atan2Request_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_Atan2Request(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.Atan2Request target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.Atan2Request();
            global::Microsoft.Robotics.Services.Sample.Math.Atan2Request from = ((global::Microsoft.Robotics.Services.Sample.Math.Atan2Request)(transformFrom));
            target.Y = from.Y;
            target.X = from.X;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_CosRequest_TO_Microsoft_Robotics_Services_Sample_Math_CosRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.CosRequest target = new global::Microsoft.Robotics.Services.Sample.Math.CosRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.CosRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.CosRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_CosRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_CosRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.CosRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.CosRequest();
            global::Microsoft.Robotics.Services.Sample.Math.CosRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.CosRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_ExpRequest_TO_Microsoft_Robotics_Services_Sample_Math_ExpRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.ExpRequest target = new global::Microsoft.Robotics.Services.Sample.Math.ExpRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ExpRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.ExpRequest)(transformFrom));
            target.Exponent = from.Exponent;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_ExpRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ExpRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ExpRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.ExpRequest();
            global::Microsoft.Robotics.Services.Sample.Math.ExpRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.ExpRequest)(transformFrom));
            target.Exponent = from.Exponent;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_LogRequest_TO_Microsoft_Robotics_Services_Sample_Math_LogRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.LogRequest target = new global::Microsoft.Robotics.Services.Sample.Math.LogRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.LogRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.LogRequest)(transformFrom));
            target.A = from.A;
            target.Base = from.Base;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_LogRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_LogRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.LogRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.LogRequest();
            global::Microsoft.Robotics.Services.Sample.Math.LogRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.LogRequest)(transformFrom));
            target.A = from.A;
            target.Base = from.Base;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_PowRequest_TO_Microsoft_Robotics_Services_Sample_Math_PowRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.PowRequest target = new global::Microsoft.Robotics.Services.Sample.Math.PowRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.PowRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.PowRequest)(transformFrom));
            target.A = from.A;
            target.Exponent = from.Exponent;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_PowRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_PowRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.PowRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.PowRequest();
            global::Microsoft.Robotics.Services.Sample.Math.PowRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.PowRequest)(transformFrom));
            target.A = from.A;
            target.Exponent = from.Exponent;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.Sample.Math.Proxy.RandomRequest _cachedInstance0 = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.RandomRequest();
        
        private static global::Microsoft.Robotics.Services.Sample.Math.RandomRequest _cachedInstance = new global::Microsoft.Robotics.Services.Sample.Math.RandomRequest();
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_RandomRequest_TO_Microsoft_Robotics_Services_Sample_Math_RandomRequest(object transformFrom) {
            return _cachedInstance;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_RandomRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_RandomRequest(object transformFrom) {
            return _cachedInstance0;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_RoundRequest_TO_Microsoft_Robotics_Services_Sample_Math_RoundRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.RoundRequest target = new global::Microsoft.Robotics.Services.Sample.Math.RoundRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.RoundRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.RoundRequest)(transformFrom));
            target.Value = from.Value;
            target.Digits = from.Digits;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_RoundRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_RoundRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.RoundRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.RoundRequest();
            global::Microsoft.Robotics.Services.Sample.Math.RoundRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.RoundRequest)(transformFrom));
            target.Value = from.Value;
            target.Digits = from.Digits;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_SinRequest_TO_Microsoft_Robotics_Services_Sample_Math_SinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.SinRequest target = new global::Microsoft.Robotics.Services.Sample.Math.SinRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.SinRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.SinRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_SinRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_SinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.SinRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.SinRequest();
            global::Microsoft.Robotics.Services.Sample.Math.SinRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.SinRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_SqrtRequest_TO_Microsoft_Robotics_Services_Sample_Math_SqrtRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.SqrtRequest target = new global::Microsoft.Robotics.Services.Sample.Math.SqrtRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.SqrtRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.SqrtRequest)(transformFrom));
            target.A = from.A;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_SqrtRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_SqrtRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.SqrtRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.SqrtRequest();
            global::Microsoft.Robotics.Services.Sample.Math.SqrtRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.SqrtRequest)(transformFrom));
            target.A = from.A;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_TanRequest_TO_Microsoft_Robotics_Services_Sample_Math_TanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.TanRequest target = new global::Microsoft.Robotics.Services.Sample.Math.TanRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.TanRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.TanRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_TanRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_TanRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.TanRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.TanRequest();
            global::Microsoft.Robotics.Services.Sample.Math.TanRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.TanRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_TruncateRequest_TO_Microsoft_Robotics_Services_Sample_Math_TruncateRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.TruncateRequest target = new global::Microsoft.Robotics.Services.Sample.Math.TruncateRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.TruncateRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.TruncateRequest)(transformFrom));
            target.A = from.A;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_TruncateRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_TruncateRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.TruncateRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.TruncateRequest();
            global::Microsoft.Robotics.Services.Sample.Math.TruncateRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.TruncateRequest)(transformFrom));
            target.A = from.A;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_ToRadiansRequest_TO_Microsoft_Robotics_Services_Sample_Math_ToRadiansRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.ToRadiansRequest target = new global::Microsoft.Robotics.Services.Sample.Math.ToRadiansRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToRadiansRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToRadiansRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_ToRadiansRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ToRadiansRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToRadiansRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToRadiansRequest();
            global::Microsoft.Robotics.Services.Sample.Math.ToRadiansRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.ToRadiansRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_Proxy_ToDegreesRequest_TO_Microsoft_Robotics_Services_Sample_Math_ToDegreesRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.ToDegreesRequest target = new global::Microsoft.Robotics.Services.Sample.Math.ToDegreesRequest();
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToDegreesRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToDegreesRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Math_ToDegreesRequest_TO_Microsoft_Robotics_Services_Sample_Math_Proxy_ToDegreesRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToDegreesRequest target = new global::Microsoft.Robotics.Services.Sample.Math.Proxy.ToDegreesRequest();
            global::Microsoft.Robotics.Services.Sample.Math.ToDegreesRequest from = ((global::Microsoft.Robotics.Services.Sample.Math.ToDegreesRequest)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_PlayRequest_TO_Microsoft_Robotics_Services_Sample_Sound_PlayRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.PlayRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.PlayRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.PlayRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.PlayRequest)(transformFrom));
            target.Filename = from.Filename;
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_PlayRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_PlayRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.PlayRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.PlayRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.PlayRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.PlayRequest)(transformFrom));
            target.Filename = from.Filename;
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_AsteriskRequest_TO_Microsoft_Robotics_Services_Sample_Sound_AsteriskRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.AsteriskRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.AsteriskRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.AsteriskRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.AsteriskRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_AsteriskRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_AsteriskRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.AsteriskRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.AsteriskRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.AsteriskRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.AsteriskRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_BeepRequest_TO_Microsoft_Robotics_Services_Sample_Sound_BeepRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.BeepRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.BeepRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.BeepRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.BeepRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_BeepRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_BeepRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.BeepRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.BeepRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.BeepRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.BeepRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_ExclamationRequest_TO_Microsoft_Robotics_Services_Sample_Sound_ExclamationRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.ExclamationRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.ExclamationRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.ExclamationRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.ExclamationRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_ExclamationRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_ExclamationRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.ExclamationRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.ExclamationRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.ExclamationRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.ExclamationRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_HandRequest_TO_Microsoft_Robotics_Services_Sample_Sound_HandRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.HandRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.HandRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.HandRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.HandRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_HandRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_HandRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.HandRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.HandRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.HandRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.HandRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_Proxy_QuestionRequest_TO_Microsoft_Robotics_Services_Sample_Sound_QuestionRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.QuestionRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.QuestionRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.QuestionRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.Proxy.QuestionRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Sound_QuestionRequest_TO_Microsoft_Robotics_Services_Sample_Sound_Proxy_QuestionRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Sound.Proxy.QuestionRequest target = new global::Microsoft.Robotics.Services.Sample.Sound.Proxy.QuestionRequest();
            global::Microsoft.Robotics.Services.Sample.Sound.QuestionRequest from = ((global::Microsoft.Robotics.Services.Sample.Sound.QuestionRequest)(transformFrom));
            target.Synchronous = from.Synchronous;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyResponse)(transformFrom));
            target.IsNullOrEmpty = from.IsNullOrEmpty;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_IsNullOrEmptyResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IsNullOrEmptyResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IsNullOrEmptyResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.IsNullOrEmptyResponse)(transformFrom));
            target.IsNullOrEmpty = from.IsNullOrEmpty;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ContainsRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ContainsRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ContainsResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsResponse)(transformFrom));
            target.Contains = from.Contains;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ContainsResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ContainsResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ContainsResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ContainsResponse)(transformFrom));
            target.Contains = from.Contains;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_EndsWithRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.IgnoreCase = from.IgnoreCase;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_EndsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.IgnoreCase = from.IgnoreCase;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_EndsWithResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithResponse)(transformFrom));
            target.EndsWith = from.EndsWith;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_EndsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_EndsWithResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.EndsWithResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.EndsWithResponse)(transformFrom));
            target.EndsWith = from.EndsWith;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_IndexOfRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_IndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_IndexOfResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfResponse)(transformFrom));
            target.IndexOf = from.IndexOf;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_IndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_IndexOfResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.IndexOfResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.IndexOfResponse)(transformFrom));
            target.IndexOf = from.IndexOf;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_InsertRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.InsertRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.InsertRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertRequest)(transformFrom));
            target.String = from.String;
            target.Insertion = from.Insertion;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_InsertRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.InsertRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.InsertRequest)(transformFrom));
            target.String = from.String;
            target.Insertion = from.Insertion;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_InsertResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.InsertResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.InsertResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertResponse)(transformFrom));
            target.Inserted = from.Inserted;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_InsertResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_InsertResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.InsertResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.InsertResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.InsertResponse)(transformFrom));
            target.Inserted = from.Inserted;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_JoinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.JoinRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.JoinRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinRequest)(transformFrom));
            target.Separator = from.Separator;
            if ((from.Strings != null)) {
                int count = from.Strings.Length;
                string[] tmp = new string[count];
                from.Strings.CopyTo(tmp, 0);
                target.Strings = tmp;
            }
            else {
                target.Strings = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_JoinRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.JoinRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.JoinRequest)(transformFrom));
            target.Separator = from.Separator;
            string[] tmp = from.Strings;
            if ((tmp != null)) {
                int count = tmp.Length;
                string[] tmp0 = new string[count];
                tmp.CopyTo(tmp0, 0);
                target.Strings = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_JoinResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.JoinResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.JoinResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinResponse)(transformFrom));
            target.Joined = from.Joined;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_JoinResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_JoinResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.JoinResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.JoinResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.JoinResponse)(transformFrom));
            target.Joined = from.Joined;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            target.StartIndex = from.StartIndex;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfResponse)(transformFrom));
            target.LastIndexOf = from.LastIndexOf;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_LastIndexOfResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_LastIndexOfResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.LastIndexOfResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.LastIndexOfResponse)(transformFrom));
            target.LastIndexOf = from.LastIndexOf;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_PadRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.PadRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.PadRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadRequest)(transformFrom));
            target.String = from.String;
            target.LeftPadding = from.LeftPadding;
            target.RightPadding = from.RightPadding;
            target.PaddingChar = from.PaddingChar;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_PadRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.PadRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.PadRequest)(transformFrom));
            target.String = from.String;
            target.LeftPadding = from.LeftPadding;
            target.RightPadding = from.RightPadding;
            target.PaddingChar = from.PaddingChar;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_PadResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.PadResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.PadResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadResponse)(transformFrom));
            target.Padded = from.Padded;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_PadResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_PadResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.PadResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.PadResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.PadResponse)(transformFrom));
            target.Padded = from.Padded;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_RemoveRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveRequest)(transformFrom));
            target.String = from.String;
            target.StartIndex = from.StartIndex;
            target.Count = from.Count;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_RemoveRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveRequest)(transformFrom));
            target.String = from.String;
            target.StartIndex = from.StartIndex;
            target.Count = from.Count;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_RemoveResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveResponse)(transformFrom));
            target.Removed = from.Removed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_RemoveResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_RemoveResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.RemoveResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.RemoveResponse)(transformFrom));
            target.Removed = from.Removed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ReplaceRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceRequest)(transformFrom));
            target.String = from.String;
            target.OldValue = from.OldValue;
            target.NewValue = from.NewValue;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ReplaceRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceRequest)(transformFrom));
            target.String = from.String;
            target.OldValue = from.OldValue;
            target.NewValue = from.NewValue;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ReplaceResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceResponse)(transformFrom));
            target.Replaced = from.Replaced;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ReplaceResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ReplaceResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ReplaceResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ReplaceResponse)(transformFrom));
            target.Replaced = from.Replaced;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_SplitRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.SplitRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.SplitRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitRequest)(transformFrom));
            target.String = from.String;
            target.Separator = from.Separator;
            target.Count = from.Count;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_SplitRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.SplitRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.SplitRequest)(transformFrom));
            target.String = from.String;
            target.Separator = from.Separator;
            target.Count = from.Count;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_SplitResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.SplitResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.SplitResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitResponse)(transformFrom));
            if ((from.Strings != null)) {
                int count = from.Strings.Length;
                string[] tmp = new string[count];
                from.Strings.CopyTo(tmp, 0);
                target.Strings = tmp;
            }
            else {
                target.Strings = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_SplitResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SplitResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SplitResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.SplitResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.SplitResponse)(transformFrom));
            string[] tmp = from.Strings;
            if ((tmp != null)) {
                int count = tmp.Length;
                string[] tmp0 = new string[count];
                tmp.CopyTo(tmp0, 0);
                target.Strings = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_StartsWithRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_StartsWithRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithRequest)(transformFrom));
            target.String = from.String;
            target.Query = from.Query;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_StartsWithResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithResponse)(transformFrom));
            target.StartsWith = from.StartsWith;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_StartsWithResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_StartsWithResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.StartsWithResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.StartsWithResponse)(transformFrom));
            target.StartsWith = from.StartsWith;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_SubStringRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringRequest)(transformFrom));
            target.String = from.String;
            target.StartIndex = from.StartIndex;
            target.Length = from.Length;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_SubStringRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringRequest)(transformFrom));
            target.String = from.String;
            target.StartIndex = from.StartIndex;
            target.Length = from.Length;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_SubStringResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringResponse)(transformFrom));
            target.SubString = from.SubString;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_SubStringResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_SubStringResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.SubStringResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.SubStringResponse)(transformFrom));
            target.SubString = from.SubString;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToLowerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ToLowerRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToLowerResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerResponse)(transformFrom));
            target.Lower = from.Lower;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ToLowerResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToLowerResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToLowerResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ToLowerResponse)(transformFrom));
            target.Lower = from.Lower;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToUpperRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ToUpperRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperRequest)(transformFrom));
            target.String = from.String;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_ToUpperResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperResponse)(transformFrom));
            target.Upper = from.Upper;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_ToUpperResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_ToUpperResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.ToUpperResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.ToUpperResponse)(transformFrom));
            target.Upper = from.Upper;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_TrimRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.TrimRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.TrimRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimRequest)(transformFrom));
            target.String = from.String;
            target.PreserveLeftSpace = from.PreserveLeftSpace;
            target.PreserveRightSpace = from.PreserveRightSpace;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_TrimRequest_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimRequest target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimRequest();
            global::Microsoft.Robotics.Services.Sample.StringHelper.TrimRequest from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.TrimRequest)(transformFrom));
            target.String = from.String;
            target.PreserveLeftSpace = from.PreserveLeftSpace;
            target.PreserveRightSpace = from.PreserveRightSpace;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_TrimResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.TrimResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.TrimResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimResponse)(transformFrom));
            target.Trimmed = from.Trimmed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_StringHelper_TrimResponse_TO_Microsoft_Robotics_Services_Sample_StringHelper_Proxy_TrimResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimResponse target = new global::Microsoft.Robotics.Services.Sample.StringHelper.Proxy.TrimResponse();
            global::Microsoft.Robotics.Services.Sample.StringHelper.TrimResponse from = ((global::Microsoft.Robotics.Services.Sample.StringHelper.TrimResponse)(transformFrom));
            target.Trimmed = from.Trimmed;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_TimerState_TO_Microsoft_Robotics_Services_Sample_Timer_TimerState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.TimerState target = new global::Microsoft.Robotics.Services.Sample.Timer.TimerState();
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimerState from = ((global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimerState)(transformFrom));
            target.Timeout = from.Timeout;
            target.Expires = from.Expires;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_TimerState_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimerState(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimerState target = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimerState();
            global::Microsoft.Robotics.Services.Sample.Timer.TimerState from = ((global::Microsoft.Robotics.Services.Sample.Timer.TimerState)(transformFrom));
            target.Timeout = from.Timeout;
            target.Expires = from.Expires;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_FireTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_FireTimerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.FireTimerRequest target = new global::Microsoft.Robotics.Services.Sample.Timer.FireTimerRequest();
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.FireTimerRequest from = ((global::Microsoft.Robotics.Services.Sample.Timer.Proxy.FireTimerRequest)(transformFrom));
            target.Fired = from.Fired;
            target.Interval = from.Interval;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_FireTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_FireTimerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.FireTimerRequest target = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.FireTimerRequest();
            global::Microsoft.Robotics.Services.Sample.Timer.FireTimerRequest from = ((global::Microsoft.Robotics.Services.Sample.Timer.FireTimerRequest)(transformFrom));
            target.Fired = from.Fired;
            target.Interval = from.Interval;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_SetTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_SetTimerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.SetTimerRequest target = new global::Microsoft.Robotics.Services.Sample.Timer.SetTimerRequest();
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.SetTimerRequest from = ((global::Microsoft.Robotics.Services.Sample.Timer.Proxy.SetTimerRequest)(transformFrom));
            target.Interval = from.Interval;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_SetTimerRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_SetTimerRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.SetTimerRequest target = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.SetTimerRequest();
            global::Microsoft.Robotics.Services.Sample.Timer.SetTimerRequest from = ((global::Microsoft.Robotics.Services.Sample.Timer.SetTimerRequest)(transformFrom));
            target.Interval = from.Interval;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TickRequest _cachedInstance2 = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TickRequest();
        
        private static global::Microsoft.Robotics.Services.Sample.Timer.TickRequest _cachedInstance1 = new global::Microsoft.Robotics.Services.Sample.Timer.TickRequest();
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_TickRequest_TO_Microsoft_Robotics_Services_Sample_Timer_TickRequest(object transformFrom) {
            return _cachedInstance1;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_TickRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TickRequest(object transformFrom) {
            return _cachedInstance2;
        }
        
        private static global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeRequest _cachedInstance4 = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeRequest();
        
        private static global::Microsoft.Robotics.Services.Sample.Timer.TimeRequest _cachedInstance3 = new global::Microsoft.Robotics.Services.Sample.Timer.TimeRequest();
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeRequest_TO_Microsoft_Robotics_Services_Sample_Timer_TimeRequest(object transformFrom) {
            return _cachedInstance3;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_TimeRequest_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeRequest(object transformFrom) {
            return _cachedInstance4;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeResponse_TO_Microsoft_Robotics_Services_Sample_Timer_TimeResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.TimeResponse target = new global::Microsoft.Robotics.Services.Sample.Timer.TimeResponse();
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeResponse from = ((global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeResponse)(transformFrom));
            target.Time = from.Time;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_Timer_TimeResponse_TO_Microsoft_Robotics_Services_Sample_Timer_Proxy_TimeResponse(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeResponse target = new global::Microsoft.Robotics.Services.Sample.Timer.Proxy.TimeResponse();
            global::Microsoft.Robotics.Services.Sample.Timer.TimeResponse from = ((global::Microsoft.Robotics.Services.Sample.Timer.TimeResponse)(transformFrom));
            target.Time = from.Time;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_UrlLauncher_Proxy_LaunchUrlRequest_TO_Microsoft_Robotics_Services_Sample_UrlLauncher_LaunchUrlRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.UrlLauncher.LaunchUrlRequest target = new global::Microsoft.Robotics.Services.Sample.UrlLauncher.LaunchUrlRequest();
            global::Microsoft.Robotics.Services.Sample.UrlLauncher.Proxy.LaunchUrlRequest from = ((global::Microsoft.Robotics.Services.Sample.UrlLauncher.Proxy.LaunchUrlRequest)(transformFrom));
            target.Url = from.Url;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_Sample_UrlLauncher_LaunchUrlRequest_TO_Microsoft_Robotics_Services_Sample_UrlLauncher_Proxy_LaunchUrlRequest(object transformFrom) {
            global::Microsoft.Robotics.Services.Sample.UrlLauncher.Proxy.LaunchUrlRequest target = new global::Microsoft.Robotics.Services.Sample.UrlLauncher.Proxy.LaunchUrlRequest();
            global::Microsoft.Robotics.Services.Sample.UrlLauncher.LaunchUrlRequest from = ((global::Microsoft.Robotics.Services.Sample.UrlLauncher.LaunchUrlRequest)(transformFrom));
            target.Url = from.Url;
            return target;
        }
    }
}
