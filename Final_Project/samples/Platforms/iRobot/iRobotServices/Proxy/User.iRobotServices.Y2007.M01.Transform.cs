//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.iRobotServices.Y2007.M01, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7" +
    "f9074033fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.IRobotScriptingEngineState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_IRobotScriptingEngineState_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_IRobotScriptingEngineState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.IRobotScriptingEngineState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_IRobotScriptingEngineState_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_IRobotScriptingEngineState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ClearScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ClearScript_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ClearScript));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ClearScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ClearScript_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ClearScript));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.Script), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_Script_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Script));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Script), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Script_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_Script));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdDemo), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdQueryList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdClean), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdSendIR), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdShowScript), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdStream), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream0));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume0));
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_IRobotScriptingEngineState_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_IRobotScriptingEngineState(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.IRobotScriptingEngineState target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.IRobotScriptingEngineState();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.IRobotScriptingEngineState from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.IRobotScriptingEngineState)(transformFrom));
            if ((from.CurrentScript != null)) {
                target.CurrentScript = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition)(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition(from.CurrentScript)));
            }
            else {
                target.CurrentScript = null;
            }
            if ((from.SavedScripts != null)) {
                int count = from.SavedScripts.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition tmp0 = default(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition);
                    if ((from.SavedScripts[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition)(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition(from.SavedScripts[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.SavedScripts = tmp;
            }
            else {
                target.SavedScripts = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_IRobotScriptingEngineState_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_IRobotScriptingEngineState(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.IRobotScriptingEngineState target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.IRobotScriptingEngineState();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.IRobotScriptingEngineState from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.IRobotScriptingEngineState)(transformFrom));
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition tmp = from.CurrentScript;
            if ((tmp != null)) {
                target.CurrentScript = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition)(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition(tmp)));
            }
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition> tmp0 = from.SavedScripts;
            if ((tmp0 != null)) {
                int count = tmp0.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition> tmp1 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition tmp2 = default(global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition);
                    global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition tmp3 = tmp0[index];
                    if ((tmp3 != null)) {
                        tmp2 = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition)(Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition(tmp3)));
                    }
                    tmp1.Add(tmp2);
                }
                target.SavedScripts = tmp1;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition)(transformFrom));
            target.Name = from.Name;
            if ((from.PacketData != null)) {
                int count = from.PacketData.Length;
                byte[] tmp = new byte[count];
                global::System.Buffer.BlockCopy(from.PacketData, 0, tmp, 0, global::System.Buffer.ByteLength(from.PacketData));
                target.PacketData = tmp;
            }
            else {
                target.PacketData = null;
            }
            if ((from.Commands != null)) {
                int count0 = from.Commands.Count;
                global::System.Collections.Generic.List<string> tmp0 = new global::System.Collections.Generic.List<string>(count0);
                tmp0.AddRange(from.Commands);
                target.Commands = tmp0;
            }
            else {
                target.Commands = null;
            }
            target.ExpectedScriptResponseBytes = from.ExpectedScriptResponseBytes;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ScriptDefinition_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ScriptDefinition(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ScriptDefinition();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ScriptDefinition)(transformFrom));
            target.Name = from.Name;
            byte[] tmp = from.PacketData;
            if ((tmp != null)) {
                int count = tmp.Length;
                byte[] tmp0 = new byte[count];
                global::System.Buffer.BlockCopy(tmp, 0, tmp0, 0, global::System.Buffer.ByteLength(tmp));
                target.PacketData = tmp0;
            }
            global::System.Collections.Generic.List<string> tmp1 = from.Commands;
            if ((tmp1 != null)) {
                int count0 = tmp1.Count;
                global::System.Collections.Generic.List<string> tmp2 = new global::System.Collections.Generic.List<string>(count0);
                tmp2.AddRange(tmp1);
                target.Commands = tmp2;
            }
            target.ExpectedScriptResponseBytes = from.ExpectedScriptResponseBytes;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ClearScript _cachedInstance0 = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.ClearScript();
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ClearScript _cachedInstance = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.ClearScript();
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ClearScript_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ClearScript(object transformFrom) {
            return _cachedInstance;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_ClearScript_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_ClearScript(object transformFrom) {
            return _cachedInstance0;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_Script_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Script(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Script target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Script();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.Script from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.Script)(transformFrom));
            target.Name = from.Name;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Script_TO_Microsoft_Robotics_Services_IRobot_Create_ScriptingEngine_Proxy_Script(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.Script target = new global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Proxy.Script();
            global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Script from = ((global::Microsoft.Robotics.Services.IRobot.Create.ScriptingEngine.Script)(transformFrom));
            target.Name = from.Name;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart _cachedInstance2 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart _cachedInstance1 = new global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart(object transformFrom) {
            return _cachedInstance1;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdStart0(object transformFrom) {
            return _cachedInstance2;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand _cachedInstance4 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand _cachedInstance3 = new global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand(object transformFrom) {
            return _cachedInstance3;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaCommand0(object transformFrom) {
            return _cachedInstance4;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl _cachedInstance6 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl _cachedInstance5 = new global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl(object transformFrom) {
            return _cachedInstance5;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdControl0(object transformFrom) {
            return _cachedInstance6;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe _cachedInstance8 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe _cachedInstance7 = new global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe(object transformFrom) {
            return _cachedInstance7;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdSafe0(object transformFrom) {
            return _cachedInstance8;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull _cachedInstance10 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull _cachedInstance9 = new global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull(object transformFrom) {
            return _cachedInstance9;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdFull0(object transformFrom) {
            return _cachedInstance10;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive target = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive)(transformFrom));
            target.Velocity = from.Velocity;
            target.Radius = from.Radius;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDrive0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive();
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive)(transformFrom));
            target.Velocity = from.Velocity;
            target.Radius = from.Radius;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect)(transformFrom));
            target.RightVelocity = from.RightVelocity;
            target.LeftVelocity = from.LeftVelocity;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDriveDirect0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect)(transformFrom));
            target.RightVelocity = from.RightVelocity;
            target.LeftVelocity = from.LeftVelocity;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript)(transformFrom));
            target.ScriptResponseBytes = from.ScriptResponseBytes;
            target.TimeoutMs = from.TimeoutMs;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPlayScript0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript)(transformFrom));
            target.ScriptResponseBytes = from.ScriptResponseBytes;
            target.TimeoutMs = from.TimeoutMs;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitAngle0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle)(transformFrom));
            target.Angle = from.Angle;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance)(transformFrom));
            target.Distance = from.Distance;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitDistance0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance)(transformFrom));
            target.Distance = from.Distance;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent)(transformFrom));
            target.WaitEvent = ((global::Microsoft.Robotics.Services.IRobot.Create.WaitEvent)(((int)(from.WaitEvent))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitEvent0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent)(transformFrom));
            target.WaitEvent = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent)(((int)(from.WaitEvent))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime)(transformFrom));
            target.Seconds = from.Seconds;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdWaitTime0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime)(transformFrom));
            target.Seconds = from.Seconds;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors target = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors)(transformFrom));
            target.CreateSensorPacket = ((global::Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket)(((int)(from.CreateSensorPacket))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSensors0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors();
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors)(transformFrom));
            target.CreateSensorPacket = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket)(((int)(from.CreateSensorPacket))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDemo target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdDemo();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo)(transformFrom));
            target.DemoMode = ((global::Microsoft.Robotics.Services.IRobot.Create.DemoMode)(((int)(from.DemoMode))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDemo0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDemo from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdDemo)(transformFrom));
            target.DemoMode = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode)(((int)(from.DemoMode))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds target = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds)(transformFrom));
            target.Leds = ((global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits)(((int)(from.Leds))));
            target.PowerColor = from.PowerColor;
            target.PowerIntensity = from.PowerIntensity;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdLeds0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds();
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds)(transformFrom));
            target.Leds = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits)(((int)(from.Leds))));
            target.PowerColor = from.PowerColor;
            target.PowerIntensity = from.PowerIntensity;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong target = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong)(transformFrom));
            target.SongNumber = from.SongNumber;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdPlaySong0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong();
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong)(transformFrom));
            target.SongNumber = from.SongNumber;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList _cachedInstance12 = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList();
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.CmdQueryList _cachedInstance11 = new global::Microsoft.Robotics.Services.IRobot.Create.CmdQueryList();
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList(object transformFrom) {
            return _cachedInstance11;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdQueryList0(object transformFrom) {
            return _cachedInstance12;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean _cachedInstance14 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.CmdClean _cachedInstance13 = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdClean();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean(object transformFrom) {
            return _cachedInstance13;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdClean0(object transformFrom) {
            return _cachedInstance14;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong target = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong)(transformFrom));
            target.SongNumber = from.SongNumber;
            if ((from.Notes != null)) {
                int count = from.Notes.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote tmp0 = default(global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote);
                    if ((from.Notes[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote)(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote(from.Notes[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.Notes = tmp;
            }
            else {
                target.Notes = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdDefineSong0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong();
            global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong)(transformFrom));
            target.SongNumber = from.SongNumber;
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote> tmp = from.Notes;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote tmp1 = default(global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote);
                    global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote tmp2 = tmp[index];
                    if ((tmp2 != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote)(Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote0(tmp2)));
                    }
                    tmp0.Add(tmp1);
                }
                target.Notes = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote target = new global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote();
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote)(transformFrom));
            target.Tone = ((global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency)(((int)(from.Tone))));
            target.Duration = from.Duration;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_RoombaNote0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote target = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote();
            global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote from = ((global::Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote)(transformFrom));
            target.Tone = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency)(((int)(from.Tone))));
            target.Duration = from.Duration;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs)(transformFrom));
            target.DigitalOut0 = from.DigitalOut0;
            target.DigitalOut1 = from.DigitalOut1;
            target.DigitalOut2 = from.DigitalOut2;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdDigitalOutputs0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs)(transformFrom));
            target.DigitalOut0 = from.DigitalOut0;
            target.DigitalOut1 = from.DigitalOut1;
            target.DigitalOut2 = from.DigitalOut2;
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock _cachedInstance16 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock _cachedInstance15 = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock(object transformFrom) {
            return _cachedInstance15;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdForceSeekingDock0(object transformFrom) {
            return _cachedInstance16;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower _cachedInstance18 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower _cachedInstance17 = new global::Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower(object transformFrom) {
            return _cachedInstance17;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_InternalCmdPower0(object transformFrom) {
            return _cachedInstance18;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers)(transformFrom));
            target.DigitalOut0 = from.DigitalOut0;
            target.DigitalOut1 = from.DigitalOut1;
            target.DigitalOut2 = from.DigitalOut2;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdPWMLowSideDrivers0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers)(transformFrom));
            target.DigitalOut0 = from.DigitalOut0;
            target.DigitalOut1 = from.DigitalOut1;
            target.DigitalOut2 = from.DigitalOut2;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdSendIR target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdSendIR();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR)(transformFrom));
            target.IRCode = ((global::Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR)(((int)(from.IRCode))));
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdSendIR0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdSendIR from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdSendIR)(transformFrom));
            target.IRCode = ((global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR)(((int)(from.IRCode))));
            return target;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript _cachedInstance20 = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript();
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.CmdShowScript _cachedInstance19 = new global::Microsoft.Robotics.Services.IRobot.Create.CmdShowScript();
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript(object transformFrom) {
            return _cachedInstance19;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdShowScript0(object transformFrom) {
            return _cachedInstance20;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot _cachedInstance22 = new global::Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot();
        
        private static global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot _cachedInstance21 = new global::Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot();
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot(object transformFrom) {
            return _cachedInstance21;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot_TO_Microsoft_Robotics_Services_IRobot_Roomba_Proxy_CmdSpot0(object transformFrom) {
            return _cachedInstance22;
        }
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream _cachedInstance24 = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream();
        
        private static global::Microsoft.Robotics.Services.IRobot.Create.CmdStream _cachedInstance23 = new global::Microsoft.Robotics.Services.IRobot.Create.CmdStream();
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream(object transformFrom) {
            return _cachedInstance23;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStream0(object transformFrom) {
            return _cachedInstance24;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume target = new global::Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume();
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume from = ((global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume)(transformFrom));
            target.StreamActive = from.StreamActive;
            return target;
        }
        
        public static object Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume_TO_Microsoft_Robotics_Services_IRobot_Create_Proxy_CmdStreamPauseResume0(object transformFrom) {
            global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume target = new global::Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume();
            global::Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume from = ((global::Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume)(transformFrom));
            target.StreamActive = from.StreamActive;
            return target;
        }
    }
}
