//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="User.ServiceTutorial6.Y2006.M06, Version=0.0.0.0, Culture=neutral, PublicKeyToken" +
    "=7f9074033fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace RoboticsServiceTutorial6.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.microsoft.com/2006/06/servicetutorial6.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/2006/06/servicetutorial6.user.html", ElementName="ServiceTutorial6State")]
    public class ServiceTutorial6State : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public ServiceTutorial6State() {
        }
        
        private string _Clock;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public string Clock {
            get {
                return this._Clock;
            }
            set {
                this._Clock = value;
            }
        }
        
        private int _InitialTicks;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int InitialTicks {
            get {
                return this._InitialTicks;
            }
            set {
                this._InitialTicks = value;
            }
        }
        
        private int _TickCount;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int TickCount {
            get {
                return this._TickCount;
            }
            set {
                this._TickCount = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current ServiceTutorial6State to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State typedTarget = ((global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State)(target));
            typedTarget._Clock = this._Clock;
            typedTarget._InitialTicks = this._InitialTicks;
            typedTarget._TickCount = this._TickCount;
        }
        
        /// <summary>
        ///Clones ServiceTutorial6State
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State target0 = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current ServiceTutorial6State to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Clock == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Clock);
            }
            writer.Write(this._InitialTicks);
            writer.Write(this._TickCount);
        }
        
        /// <summary>
        ///Deserializes ServiceTutorial6State
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized ServiceTutorial6State</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Clock = reader.ReadString();
            }
            this._InitialTicks = reader.ReadInt32();
            this._TickCount = reader.ReadInt32();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://schemas.microsoft.com/2006/06/servicetutorial6.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/2006/06/servicetutorial6.user.html", ElementName="SetTickCountRequest")]
    public class SetTickCountRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SetTickCountRequest() {
        }
        
        public SetTickCountRequest(int tickCount) {
            this._TickCount = tickCount;
        }
        
        private int _TickCount;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public int TickCount {
            get {
                return this._TickCount;
            }
            set {
                this._TickCount = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SetTickCountRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest typedTarget = ((global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest)(target));
            typedTarget._TickCount = this._TickCount;
        }
        
        /// <summary>
        ///Clones SetTickCountRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest target0 = new global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SetTickCountRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._TickCount);
        }
        
        /// <summary>
        ///Deserializes SetTickCountRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SetTickCountRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._TickCount = reader.ReadInt32();
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Replace : global::Microsoft.Dss.ServiceModel.Dssp.Replace<global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultReplaceResponseType, global:: W3C.Soap.Fault>> {
        
        public Replace() {
        }
        
        public Replace(global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body) : 
                base(body) {
        }
        
        public Replace(global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultReplaceResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SetTickCount : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault>> {
        
        public SetTickCount() {
        }
        
        public SetTickCount(global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body) : 
                base(body) {
        }
        
        public SetTickCount(global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class ServiceTutorial6Operations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: RoboticsServiceTutorial6.Proxy.Get, global:: Microsoft.Dss.Core.DsspHttp.HttpGet, global:: RoboticsServiceTutorial6.Proxy.Replace, global:: RoboticsServiceTutorial4.Proxy.IncrementTick, global:: RoboticsServiceTutorial6.Proxy.SetTickCount> {
        
        public ServiceTutorial6Operations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::RoboticsServiceTutorial6.Proxy.Get operation = new global::RoboticsServiceTutorial6.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::RoboticsServiceTutorial6.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::RoboticsServiceTutorial6.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::RoboticsServiceTutorial6.Proxy.Get operation = new global::RoboticsServiceTutorial6.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::RoboticsServiceTutorial6.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::RoboticsServiceTutorial6.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpGet() {
            global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            global::Microsoft.Dss.Core.DsspHttp.HttpGet operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpGet(out global::Microsoft.Dss.Core.DsspHttp.HttpGet operation) {
            global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpGet(global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            }
            global::Microsoft.Dss.Core.DsspHttp.HttpGet operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpGet(global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body, out global::Microsoft.Dss.Core.DsspHttp.HttpGet operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            }
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultReplaceResponseType, global:: W3C.Soap.Fault> Replace() {
            global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State();
            global::RoboticsServiceTutorial6.Proxy.Replace operation = new global::RoboticsServiceTutorial6.Proxy.Replace(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Replace(out global::RoboticsServiceTutorial6.Proxy.Replace operation) {
            global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State();
            operation = new global::RoboticsServiceTutorial6.Proxy.Replace(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultReplaceResponseType, global:: W3C.Soap.Fault> Replace(global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State();
            }
            global::RoboticsServiceTutorial6.Proxy.Replace operation = new global::RoboticsServiceTutorial6.Proxy.Replace(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Replace(global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State body, out global::RoboticsServiceTutorial6.Proxy.Replace operation) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6State();
            }
            operation = new global::RoboticsServiceTutorial6.Proxy.Replace(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global::W3C.Soap.Fault> IncrementTick() {
            global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest body = new global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest();
            global::RoboticsServiceTutorial4.Proxy.IncrementTick operation = new global::RoboticsServiceTutorial4.Proxy.IncrementTick(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice IncrementTick(out global::RoboticsServiceTutorial4.Proxy.IncrementTick operation) {
            global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest body = new global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest();
            operation = new global::RoboticsServiceTutorial4.Proxy.IncrementTick(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global::W3C.Soap.Fault> IncrementTick(global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest body) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest();
            }
            global::RoboticsServiceTutorial4.Proxy.IncrementTick operation = new global::RoboticsServiceTutorial4.Proxy.IncrementTick(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice IncrementTick(global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest body, out global::RoboticsServiceTutorial4.Proxy.IncrementTick operation) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial4.Proxy.IncrementTickRequest();
            }
            operation = new global::RoboticsServiceTutorial4.Proxy.IncrementTick(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> SetTickCount(int tickCount) {
            global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body = new global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest(tickCount);
            global::RoboticsServiceTutorial6.Proxy.SetTickCount operation = new global::RoboticsServiceTutorial6.Proxy.SetTickCount(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetTickCount(int tickCount, out global::RoboticsServiceTutorial6.Proxy.SetTickCount operation) {
            global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body = new global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest(tickCount);
            operation = new global::RoboticsServiceTutorial6.Proxy.SetTickCount(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType, global:: W3C.Soap.Fault> SetTickCount(global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest();
            }
            global::RoboticsServiceTutorial6.Proxy.SetTickCount operation = new global::RoboticsServiceTutorial6.Proxy.SetTickCount(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetTickCount(global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest body, out global::RoboticsServiceTutorial6.Proxy.SetTickCount operation) {
            if ((body == null)) {
                body = new global::RoboticsServiceTutorial6.Proxy.SetTickCountRequest();
            }
            operation = new global::RoboticsServiceTutorial6.Proxy.SetTickCount(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("How to expose and transform the state of a service.")]
    [global::System.ComponentModel.DisplayNameAttribute("(User) Service Tutorial 6: Retrieving State and Displaying it Using an XML Transf" +
        "orm")]
    public class Contract {
        
        public const string Identifier = "http://schemas.microsoft.com/2006/06/servicetutorial6.user.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.microsoft.com/2006/06/servicetutorial6.user.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://schemas.microsoft.com/2006/06/servicetutorial6.user.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.ServiceTutorial6Operations = new global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6Operations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.ServiceTutorial6Operations, "http://schemas.microsoft.com/2006/06/servicetutorial6.user.html", "ServiceTutorial6Operations", ""));
        }
        
        public global::RoboticsServiceTutorial6.Proxy.ServiceTutorial6Operations ServiceTutorial6Operations;
    }
}
