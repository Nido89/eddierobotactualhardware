//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("DssLogAnalyzer")]
[assembly: global::System.Reflection.AssemblyDescriptionAttribute("DssLogAnalyzer")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.DssLogAnalyzer.Y2011.M10, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7" +
    "f9074033fd3dcf7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.DssLogAnalyzerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_DssLogAnalyzerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_DssLogAnalyzerState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.DssLogAnalyzerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_DssLogAnalyzerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_DssLogAnalyzerState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.LogFilesLoadedRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_LogFilesLoadedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_LogFilesLoadedRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.LogFilesLoadedRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_LogFilesLoadedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_LogFilesLoadedRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopesSelectedRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopesSelectedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopesSelectedRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopesSelectedRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopesSelectedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopesSelectedRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.Proxy.RawViewerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_Proxy_RawViewerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_RawViewerState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.RawViewerState), new global::Microsoft.Dss.Core.Attributes.Transform(Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_RawViewerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_Proxy_RawViewerState));
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_DssLogAnalyzerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_DssLogAnalyzerState(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.DssLogAnalyzerState target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.DssLogAnalyzerState();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.DssLogAnalyzerState from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.DssLogAnalyzerState)(transformFrom));
            if ((from.Envelopes != null)) {
                int count = from.Envelopes.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList tmp0 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList);
                    if ((from.Envelopes[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList(from.Envelopes[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.Envelopes = tmp;
            }
            else {
                target.Envelopes = null;
            }
            target.LogFilesFolder = from.LogFilesFolder;
            global::System.Collections.Generic.Dictionary<string, global:: System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>> tmp1 = default(global::System.Collections.Generic.Dictionary<string, global:: System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>>);
            if ((from.LogFileEnvelopes != null)) {
                tmp1 = new global::System.Collections.Generic.Dictionary<string, global:: System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>>();
                for (global::System.Collections.Generic.IEnumerator<string> iterator = from.LogFileEnvelopes.Keys.GetEnumerator(); iterator.MoveNext(); 
                ) {
                    string tmp2 = default(string);
                    global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList> tmp3 = default(global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>);
                    tmp2 = iterator.Current;
                    if ((from.LogFileEnvelopes[iterator.Current] != null)) {
                        int count0 = from.LogFileEnvelopes[iterator.Current].Count;
                        global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList> tmp4 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>(count0);
                        for (int index0 = 0; (index0 < count0); index0 = (index0 + 1)) {
                            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList tmp5 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList);
                            if ((from.LogFileEnvelopes[iterator.Current][index0] != null)) {
                                tmp5 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList(from.LogFileEnvelopes[iterator.Current][index0])));
                            }
                            else {
                                tmp5 = null;
                            }
                            tmp4.Add(tmp5);
                        }
                        tmp3 = tmp4;
                    }
                    else {
                        tmp3 = null;
                    }
                    tmp1.Add(tmp2, tmp3);
                }
            }
            else {
                tmp1 = null;
            }
            target.LogFileEnvelopes = tmp1;
            target.Headless = from.Headless;
            if ((from.CurrentSelectedEnvelopes != null)) {
                target.CurrentSelectedEnvelopes = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList(from.CurrentSelectedEnvelopes)));
            }
            else {
                target.CurrentSelectedEnvelopes = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_DssLogAnalyzerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_DssLogAnalyzerState(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.DssLogAnalyzerState target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.DssLogAnalyzerState();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.DssLogAnalyzerState from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.DssLogAnalyzerState)(transformFrom));
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList> tmp = from.Envelopes;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList tmp1 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList);
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList tmp2 = tmp[index];
                    if ((tmp2 != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList(tmp2)));
                    }
                    tmp0.Add(tmp1);
                }
                target.Envelopes = tmp0;
            }
            target.LogFilesFolder = from.LogFilesFolder;
            global::System.Collections.Generic.Dictionary<string, global:: System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList>> tmp3 = from.LogFileEnvelopes;
            global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>> tmp4 = default(global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>>);
            if ((tmp3 != null)) {
                tmp4 = new global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>>();
                for (global::System.Collections.Generic.IEnumerator<string> iterator = tmp3.Keys.GetEnumerator(); iterator.MoveNext(); 
                ) {
                    string tmp5 = default(string);
                    global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList> tmp6 = default(global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>);
                    tmp5 = iterator.Current;
                    global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList> tmp7 = tmp3[iterator.Current];
                    if ((tmp7 != null)) {
                        int count0 = tmp7.Count;
                        global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList> tmp8 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList>(count0);
                        for (int index0 = 0; (index0 < count0); index0 = (index0 + 1)) {
                            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList tmp9 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList);
                            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList tmp10 = tmp7[index0];
                            if ((tmp10 != null)) {
                                tmp9 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList(tmp10)));
                            }
                            tmp8.Add(tmp9);
                        }
                        tmp6 = tmp8;
                    }
                    tmp4.Add(tmp5, tmp6);
                }
            }
            target.LogFileEnvelopes = tmp4;
            target.Headless = from.Headless;
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList tmp11 = from.CurrentSelectedEnvelopes;
            if ((tmp11 != null)) {
                target.CurrentSelectedEnvelopes = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList)(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList(tmp11)));
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList)(transformFrom));
            if ((from.Envelopes != null)) {
                int count = from.Envelopes.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope> tmp = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope tmp0 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope);
                    if ((from.Envelopes[index] != null)) {
                        tmp0 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope)(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope(from.Envelopes[index])));
                    }
                    else {
                        tmp0 = null;
                    }
                    tmp.Add(tmp0);
                }
                target.Envelopes = tmp;
            }
            else {
                target.Envelopes = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeList_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeList(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeList();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeList)(transformFrom));
            global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope> tmp = from.Envelopes;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope> tmp0 = new global::System.Collections.Generic.List<global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope>(count);
                for (int index = 0; (index < count); index = (index + 1)) {
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope tmp1 = default(global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope);
                    global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope tmp2 = tmp[index];
                    if ((tmp2 != null)) {
                        tmp1 = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope)(Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope(tmp2)));
                    }
                    tmp0.Add(tmp1);
                }
                target.Envelopes = tmp0;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope)(transformFrom));
            target.Offset = from.Offset;
            target.Filename = from.Filename;
            if ((from.Header != null)) {
                target.Header = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader)(Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader(from.Header)));
            }
            else {
                target.Header = null;
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Envelope_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_Envelope(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.Envelope();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Envelope)(transformFrom));
            target.Offset = from.Offset;
            target.Filename = from.Filename;
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader tmp = from.Header;
            if ((tmp != null)) {
                target.Header = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader)(Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader(tmp)));
            }
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader)(transformFrom));
            target.Action = from.Action;
            target.From = from.From;
            target.MessageId = from.MessageId;
            target.To = from.To;
            target.TimeStamp = from.TimeStamp;
            return target;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopeHeader_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopeHeader(object transformFrom) {
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader target = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopeHeader();
            global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader from = ((global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopeHeader)(transformFrom));
            target.Action = from.Action;
            target.From = from.From;
            target.MessageId = from.MessageId;
            target.To = from.To;
            target.TimeStamp = from.TimeStamp;
            return target;
        }
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.LogFilesLoadedRequest _cachedInstance0 = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.LogFilesLoadedRequest();
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzer.LogFilesLoadedRequest _cachedInstance = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.LogFilesLoadedRequest();
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_LogFilesLoadedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_LogFilesLoadedRequest(object transformFrom) {
            return _cachedInstance;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_LogFilesLoadedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_LogFilesLoadedRequest(object transformFrom) {
            return _cachedInstance0;
        }
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopesSelectedRequest _cachedInstance2 = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.Proxy.EnvelopesSelectedRequest();
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopesSelectedRequest _cachedInstance1 = new global::Microsoft.Robotics.Tools.DssLogAnalyzer.EnvelopesSelectedRequest();
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopesSelectedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopesSelectedRequest(object transformFrom) {
            return _cachedInstance1;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzer_EnvelopesSelectedRequest_TO_Microsoft_Robotics_Tools_DssLogAnalyzer_Proxy_EnvelopesSelectedRequest(object transformFrom) {
            return _cachedInstance2;
        }
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.Proxy.RawViewerState _cachedInstance4 = new global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.Proxy.RawViewerState();
        
        private static global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.RawViewerState _cachedInstance3 = new global::Microsoft.Robotics.Tools.DssLogAnalyzerPlugins.RawViewer.RawViewerState();
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_Proxy_RawViewerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_RawViewerState(object transformFrom) {
            return _cachedInstance3;
        }
        
        public static object Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_RawViewerState_TO_Microsoft_Robotics_Tools_DssLogAnalyzerPlugins_RawViewer_Proxy_RawViewerState(object transformFrom) {
            return _cachedInstance4;
        }
    }
}
