//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="User.JointMover, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7f9074033fd3dcf" +
    "7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace ProMRDS.Simulation.JointMover.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html", ElementName="JointMoverState")]
    public class JointMoverState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public JointMoverState() {
        }
        
        private global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc> _Joints;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc> Joints {
            get {
                return this._Joints;
            }
            set {
                this._Joints = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current JointMoverState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState typedTarget = ((global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState)(target));
            if ((this._Joints != null)) {
                global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc> tmp = new global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc>();
                ((Microsoft.Dss.Core.IDssSerializable)(this._Joints)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                typedTarget._Joints = tmp;
            }
        }
        
        /// <summary>
        ///Clones JointMoverState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState target0 = new global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current JointMoverState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Joints == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._Joints)).Serialize(writer);
            }
        }
        
        /// <summary>
        ///Deserializes JointMoverState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized JointMoverState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Joints = ((global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc>)(((Microsoft.Dss.Core.IDssSerializable)(new global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc>())).Deserialize(reader)));
            }
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html", ElementName="DOFDesc")]
    public class DOFDesc : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public DOFDesc() {
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private global::ProMRDS.Simulation.JointMover.Proxy.JointDesc _Description;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::ProMRDS.Simulation.JointMover.Proxy.JointDesc Description {
            get {
                return this._Description;
            }
            set {
                this._Description = value;
            }
        }
        
        private global::ProMRDS.Simulation.JointMover.Proxy.DOFType _Type;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::ProMRDS.Simulation.JointMover.Proxy.DOFType Type {
            get {
                return this._Type;
            }
            set {
                this._Type = value;
            }
        }
        
        private float _Minimum;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Minimum {
            get {
                return this._Minimum;
            }
            set {
                this._Minimum = value;
            }
        }
        
        private float _Maximum;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Maximum {
            get {
                return this._Maximum;
            }
            set {
                this._Maximum = value;
            }
        }
        
        private float _Scale;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Scale {
            get {
                return this._Scale;
            }
            set {
                this._Scale = value;
            }
        }
        
        private bool _IsVelocityDrive;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public bool IsVelocityDrive {
            get {
                return this._IsVelocityDrive;
            }
            set {
                this._IsVelocityDrive = value;
            }
        }
        
        private float _DefaultDriveValue;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float DefaultDriveValue {
            get {
                return this._DefaultDriveValue;
            }
            set {
                this._DefaultDriveValue = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current DOFDesc to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc typedTarget = ((global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc)(target));
            typedTarget._Name = this._Name;
            if ((this._Description != null)) {
                global::ProMRDS.Simulation.JointMover.Proxy.JointDesc tmp = new global::ProMRDS.Simulation.JointMover.Proxy.JointDesc();
                ((Microsoft.Dss.Core.IDssSerializable)(this._Description)).CopyTo(((Microsoft.Dss.Core.IDssSerializable)(tmp)));
                typedTarget._Description = tmp;
            }
            typedTarget._Type = this._Type;
            typedTarget._Minimum = this._Minimum;
            typedTarget._Maximum = this._Maximum;
            typedTarget._Scale = this._Scale;
            typedTarget._IsVelocityDrive = this._IsVelocityDrive;
            typedTarget._DefaultDriveValue = this._DefaultDriveValue;
        }
        
        /// <summary>
        ///Clones DOFDesc
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc target0 = new global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current DOFDesc to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            if ((this._Description == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                ((Microsoft.Dss.Core.IDssSerializable)(this._Description)).Serialize(writer);
            }
            writer.Write(((int)(this._Type)));
            writer.Write(this._Minimum);
            writer.Write(this._Maximum);
            writer.Write(this._Scale);
            writer.Write(this._IsVelocityDrive);
            writer.Write(this._DefaultDriveValue);
        }
        
        /// <summary>
        ///Deserializes DOFDesc
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized DOFDesc</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            if ((reader.ReadByte() != 0)) {
                this._Description = ((global::ProMRDS.Simulation.JointMover.Proxy.JointDesc)(((Microsoft.Dss.Core.IDssSerializable)(new global::ProMRDS.Simulation.JointMover.Proxy.JointDesc())).Deserialize(reader)));
            }
            this._Type = ((global::ProMRDS.Simulation.JointMover.Proxy.DOFType)(reader.ReadInt32()));
            this._Minimum = reader.ReadSingle();
            this._Maximum = reader.ReadSingle();
            this._Scale = reader.ReadSingle();
            this._IsVelocityDrive = reader.ReadBoolean();
            this._DefaultDriveValue = reader.ReadSingle();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html", ElementName="JointDesc")]
    public class JointDesc : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public JointDesc() {
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private float _Swing1Angle;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Swing1Angle {
            get {
                return this._Swing1Angle;
            }
            set {
                this._Swing1Angle = value;
            }
        }
        
        private float _Swing2Angle;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Swing2Angle {
            get {
                return this._Swing2Angle;
            }
            set {
                this._Swing2Angle = value;
            }
        }
        
        private float _TwistAngle;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float TwistAngle {
            get {
                return this._TwistAngle;
            }
            set {
                this._TwistAngle = value;
            }
        }
        
        private float _X;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float X {
            get {
                return this._X;
            }
            set {
                this._X = value;
            }
        }
        
        private float _Y;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Y {
            get {
                return this._Y;
            }
            set {
                this._Y = value;
            }
        }
        
        private float _Z;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public float Z {
            get {
                return this._Z;
            }
            set {
                this._Z = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current JointDesc to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::ProMRDS.Simulation.JointMover.Proxy.JointDesc typedTarget = ((global::ProMRDS.Simulation.JointMover.Proxy.JointDesc)(target));
            typedTarget._Name = this._Name;
            typedTarget._Swing1Angle = this._Swing1Angle;
            typedTarget._Swing2Angle = this._Swing2Angle;
            typedTarget._TwistAngle = this._TwistAngle;
            typedTarget._X = this._X;
            typedTarget._Y = this._Y;
            typedTarget._Z = this._Z;
        }
        
        /// <summary>
        ///Clones JointDesc
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::ProMRDS.Simulation.JointMover.Proxy.JointDesc target0 = new global::ProMRDS.Simulation.JointMover.Proxy.JointDesc();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current JointDesc to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            writer.Write(this._Swing1Angle);
            writer.Write(this._Swing2Angle);
            writer.Write(this._TwistAngle);
            writer.Write(this._X);
            writer.Write(this._Y);
            writer.Write(this._Z);
        }
        
        /// <summary>
        ///Deserializes JointDesc
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized JointDesc</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            this._Swing1Angle = reader.ReadSingle();
            this._Swing2Angle = reader.ReadSingle();
            this._TwistAngle = reader.ReadSingle();
            this._X = reader.ReadSingle();
            this._Y = reader.ReadSingle();
            this._Z = reader.ReadSingle();
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class JointMoverOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: ProMRDS.Simulation.JointMover.Proxy.Get, global:: Microsoft.Dss.Core.DsspHttp.HttpGet> {
        
        public JointMoverOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::ProMRDS.Simulation.JointMover.Proxy.Get operation = new global::ProMRDS.Simulation.JointMover.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::ProMRDS.Simulation.JointMover.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::ProMRDS.Simulation.JointMover.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::ProMRDS.Simulation.JointMover.Proxy.Get operation = new global::ProMRDS.Simulation.JointMover.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::ProMRDS.Simulation.JointMover.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::ProMRDS.Simulation.JointMover.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpGet() {
            global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            global::Microsoft.Dss.Core.DsspHttp.HttpGet operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpGet(out global::Microsoft.Dss.Core.DsspHttp.HttpGet operation) {
            global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpGet(global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            }
            global::Microsoft.Dss.Core.DsspHttp.HttpGet operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpGet(global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType body, out global::Microsoft.Dss.Core.DsspHttp.HttpGet operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpGetRequestType();
            }
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpGet(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.microsoft.com/contracts/2008/08/jointmover.user.html", ElementName="DOFType")]
    public enum DOFType : int {
        
        Twist = 0,
        
        Swing1 = 1,
        
        Swing2 = 2,
        
        X = 3,
        
        Y = 4,
        
        Z = 5,
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("Allows joints in a sim entity to be manipulated.")]
    [global::System.ComponentModel.DisplayNameAttribute("(User) Joint Mover")]
    public class Contract {
        
        public const string Identifier = "http://www.microsoft.com/contracts/2008/08/jointmover.user.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://www.microsoft.com/contracts/2008/08/jointmover.user.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://www.microsoft.com/contracts/2008/08/jointmover.user.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.JointMoverOperations = new global::ProMRDS.Simulation.JointMover.Proxy.JointMoverOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.JointMoverOperations, "http://www.microsoft.com/contracts/2008/08/jointmover.user.html", "JointMoverOperations", ""));
        }
        
        public global::ProMRDS.Simulation.JointMover.Proxy.JointMoverOperations JointMoverOperations;
    }
}
