//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="User.JointMover, Version=0.0.0.0, Culture=neutral, PublicKeyToken=7f9074033fd3dcf" +
    "7")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformUser {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_Proxy_JointMoverState_TO_ProMRDS_Simulation_JointMover_JointMoverState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::ProMRDS.Simulation.JointMover.JointMoverState), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_JointMoverState_TO_ProMRDS_Simulation_JointMover_Proxy_JointMoverState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_Proxy_DOFDesc_TO_ProMRDS_Simulation_JointMover_DOFDesc));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::ProMRDS.Simulation.JointMover.DOFDesc), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_DOFDesc_TO_ProMRDS_Simulation_JointMover_Proxy_DOFDesc));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::ProMRDS.Simulation.JointMover.Proxy.JointDesc), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_Proxy_JointDesc_TO_ProMRDS_Simulation_JointMover_JointDesc));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::ProMRDS.Simulation.JointMover.JointDesc), new global::Microsoft.Dss.Core.Attributes.Transform(ProMRDS_Simulation_JointMover_JointDesc_TO_ProMRDS_Simulation_JointMover_Proxy_JointDesc));
        }
        
        public static object ProMRDS_Simulation_JointMover_Proxy_JointMoverState_TO_ProMRDS_Simulation_JointMover_JointMoverState(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.JointMoverState target = new global::ProMRDS.Simulation.JointMover.JointMoverState();
            global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState from = ((global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState)(transformFrom));
            global::System.Collections.Generic.Dictionary<string, global:: ProMRDS.Simulation.JointMover.DOFDesc> tmp = default(global::System.Collections.Generic.Dictionary<string, global:: ProMRDS.Simulation.JointMover.DOFDesc>);
            if ((from.Joints != null)) {
                tmp = new global::System.Collections.Generic.Dictionary<string, global:: ProMRDS.Simulation.JointMover.DOFDesc>();
                for (global::System.Collections.Generic.IEnumerator<string> iterator = from.Joints.Keys.GetEnumerator(); iterator.MoveNext(); 
                ) {
                    string tmp0 = default(string);
                    global::ProMRDS.Simulation.JointMover.DOFDesc tmp1 = default(global::ProMRDS.Simulation.JointMover.DOFDesc);
                    tmp0 = iterator.Current;
                    if ((from.Joints[iterator.Current] != null)) {
                        tmp1 = ((global::ProMRDS.Simulation.JointMover.DOFDesc)(ProMRDS_Simulation_JointMover_Proxy_DOFDesc_TO_ProMRDS_Simulation_JointMover_DOFDesc(from.Joints[iterator.Current])));
                    }
                    else {
                        tmp1 = null;
                    }
                    tmp.Add(tmp0, tmp1);
                }
            }
            else {
                tmp = null;
            }
            target.Joints = tmp;
            return target;
        }
        
        public static object ProMRDS_Simulation_JointMover_JointMoverState_TO_ProMRDS_Simulation_JointMover_Proxy_JointMoverState(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState target = new global::ProMRDS.Simulation.JointMover.Proxy.JointMoverState();
            global::ProMRDS.Simulation.JointMover.JointMoverState from = ((global::ProMRDS.Simulation.JointMover.JointMoverState)(transformFrom));
            global::System.Collections.Generic.Dictionary<string, global:: ProMRDS.Simulation.JointMover.DOFDesc> tmp = from.Joints;
            global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc> tmp0 = default(global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc>);
            if ((tmp != null)) {
                tmp0 = new global::Microsoft.Dss.Core.Utilities.DssDictionary<string, global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc>();
                for (global::System.Collections.Generic.IEnumerator<string> iterator = tmp.Keys.GetEnumerator(); iterator.MoveNext(); 
                ) {
                    string tmp1 = default(string);
                    global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc tmp2 = default(global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc);
                    tmp1 = iterator.Current;
                    global::ProMRDS.Simulation.JointMover.DOFDesc tmp3 = tmp[iterator.Current];
                    if ((tmp3 != null)) {
                        tmp2 = ((global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc)(ProMRDS_Simulation_JointMover_DOFDesc_TO_ProMRDS_Simulation_JointMover_Proxy_DOFDesc(tmp3)));
                    }
                    tmp0.Add(tmp1, tmp2);
                }
            }
            target.Joints = tmp0;
            return target;
        }
        
        public static object ProMRDS_Simulation_JointMover_Proxy_DOFDesc_TO_ProMRDS_Simulation_JointMover_DOFDesc(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.DOFDesc target = new global::ProMRDS.Simulation.JointMover.DOFDesc();
            global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc from = ((global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc)(transformFrom));
            target.Name = from.Name;
            if ((from.Description != null)) {
                target.Description = ((global::ProMRDS.Simulation.JointMover.JointDesc)(ProMRDS_Simulation_JointMover_Proxy_JointDesc_TO_ProMRDS_Simulation_JointMover_JointDesc(from.Description)));
            }
            else {
                target.Description = null;
            }
            target.Type = ((global::ProMRDS.Simulation.JointMover.DOFType)(((int)(from.Type))));
            target.Minimum = from.Minimum;
            target.Maximum = from.Maximum;
            target.Scale = from.Scale;
            target.IsVelocityDrive = from.IsVelocityDrive;
            target.DefaultDriveValue = from.DefaultDriveValue;
            return target;
        }
        
        public static object ProMRDS_Simulation_JointMover_DOFDesc_TO_ProMRDS_Simulation_JointMover_Proxy_DOFDesc(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc target = new global::ProMRDS.Simulation.JointMover.Proxy.DOFDesc();
            global::ProMRDS.Simulation.JointMover.DOFDesc from = ((global::ProMRDS.Simulation.JointMover.DOFDesc)(transformFrom));
            target.Name = from.Name;
            global::ProMRDS.Simulation.JointMover.JointDesc tmp = from.Description;
            if ((tmp != null)) {
                target.Description = ((global::ProMRDS.Simulation.JointMover.Proxy.JointDesc)(ProMRDS_Simulation_JointMover_JointDesc_TO_ProMRDS_Simulation_JointMover_Proxy_JointDesc(tmp)));
            }
            target.Type = ((global::ProMRDS.Simulation.JointMover.Proxy.DOFType)(((int)(from.Type))));
            target.Minimum = from.Minimum;
            target.Maximum = from.Maximum;
            target.Scale = from.Scale;
            target.IsVelocityDrive = from.IsVelocityDrive;
            target.DefaultDriveValue = from.DefaultDriveValue;
            return target;
        }
        
        public static object ProMRDS_Simulation_JointMover_Proxy_JointDesc_TO_ProMRDS_Simulation_JointMover_JointDesc(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.JointDesc target = new global::ProMRDS.Simulation.JointMover.JointDesc();
            global::ProMRDS.Simulation.JointMover.Proxy.JointDesc from = ((global::ProMRDS.Simulation.JointMover.Proxy.JointDesc)(transformFrom));
            target.Name = from.Name;
            target.Swing1Angle = from.Swing1Angle;
            target.Swing2Angle = from.Swing2Angle;
            target.TwistAngle = from.TwistAngle;
            target.X = from.X;
            target.Y = from.Y;
            target.Z = from.Z;
            return target;
        }
        
        public static object ProMRDS_Simulation_JointMover_JointDesc_TO_ProMRDS_Simulation_JointMover_Proxy_JointDesc(object transformFrom) {
            global::ProMRDS.Simulation.JointMover.Proxy.JointDesc target = new global::ProMRDS.Simulation.JointMover.Proxy.JointDesc();
            global::ProMRDS.Simulation.JointMover.JointDesc from = ((global::ProMRDS.Simulation.JointMover.JointDesc)(transformFrom));
            target.Name = from.Name;
            target.Swing1Angle = from.Swing1Angle;
            target.Swing2Angle = from.Swing2Angle;
            target.TwistAngle = from.TwistAngle;
            target.X = from.X;
            target.Y = from.Y;
            target.Z = from.Z;
            return target;
        }
    }
}
